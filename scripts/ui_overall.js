var app_simulator = new PIXI.Application(1920, 1080, {transparent : true});
document.body.appendChild(app_simulator.view);

app_simulator.stage.position.set(
    app_simulator.renderer.width*0.5, app_simulator.renderer.height*0.5);


let this_stat = {
    health          :   0,
    relationship    :   0,
    grade           :   0
}

let timetable = [[1, 0], [2, 3]];

let thisGame = {
    department  :   'none',
    timetable   :   timetable,
    stat        :   [100, 100, 100]
}

let Department = {
// DEPARTMENT   :   VALUE
    MATH        :   0,      0   :   'MATH',
    PHYS        :   1,      1   :   'PHYS',
    CHEM        :   2,      2   :   'CHEM',
    LIFE        :   3,      3   :   'LIFE',
    MSE         :   4,      4   :   'MSE',
    ME          :   5,      5   :   'ME',
    IME         :   6,      6   :   'IME',
    EE          :   7,      7   :   'EE',
    CSE         :   8,      8   :   'CSE',
    CE          :   9,      9   :   'CE',
    CITE        :   10,     10  :   'CITE'
}

let icons_Texture = {
//  DEPARTMENT(_~~) :
    MATH            :   PIXI.Texture.fromImage('images/departments/01_MATH_black.png'),
    MATH_labeled    :   PIXI.Texture.fromImage('images/departments/01_MATH_black_labeled.png'),
    PHYS            :   PIXI.Texture.fromImage('images/departments/02_PHYS_black.png'),
    PHYS_labeled    :   PIXI.Texture.fromImage('images/departments/02_PHYS_black_labeled.png'),
    CHEM            :   PIXI.Texture.fromImage('images/departments/03_CHEM_black.png'),
    CHEM_labeled    :   PIXI.Texture.fromImage('images/departments/03_CHEM_black_labeled.png'),
    LIFE            :   PIXI.Texture.fromImage('images/departments/04_LIFE_black.png'),
    LIFE_labeled    :   PIXI.Texture.fromImage('images/departments/04_LIFE_black_labeled.png'),
    MSE             :   PIXI.Texture.fromImage('images/departments/05_MSE_black.png'),
    MSE_labeled     :   PIXI.Texture.fromImage('images/departments/05_MSE_black_labeled.png'),  
    ME              :   PIXI.Texture.fromImage('images/departments/06_ME_black.png'),
    ME_labeled      :   PIXI.Texture.fromImage('images/departments/06_ME_black_labeled.png'),  
    IME             :   PIXI.Texture.fromImage('images/departments/07_IME_black.png'),
    IME_labeled     :   PIXI.Texture.fromImage('images/departments/07_IME_black_labeled.png'),  
    EE              :   PIXI.Texture.fromImage('images/departments/08_EE_black.png'),
    EE_labeled      :   PIXI.Texture.fromImage('images/departments/08_EE_black_labeled.png'),  
    CSE             :   PIXI.Texture.fromImage('images/departments/09_CSE_black.png'),
    CSE_labeled     :   PIXI.Texture.fromImage('images/departments/09_CSE_black_labeled.png'),  
    CE              :   PIXI.Texture.fromImage('images/departments/10_CE_black.png'),
    CE_labeled      :   PIXI.Texture.fromImage('images/departments/10_CE_black_labeled.png'),  
    CITE            :   PIXI.Texture.fromImage('images/ang.png'),  // TEMPORARY
    CITE_labeled    :   PIXI.Texture.fromImage('images/sibal.png'),
    RAND            :   PIXI.Texture.fromImage('images/hohoho.png'),
    RAND_labeled    :   PIXI.Texture.fromImage('images/hahaha.png')
}

let question_List = {
//  QUESTION        :   [QUESTION,  
//                       ANSWER-AFFECT-VALUE ARRAY]
    0               :   [   '가장 중요한 것 두개를 고르면?',
                            [
                                ['학점', 'grade', +3],
                                ['인간관계', 'relationship', +2],
                                ['체력', 'health', +1]
                            ],
                            2
                        ],
    1               :   [   '내 인생?',
                            [
                                ['조졌따리', 'grade', -10],
                                ['망했따리', 'relationship', -20],
                                ['띠용~!', 'health', -30],
                                ['기모리~', 'grade', -30]
                            ],
                            3
                        ],
    2               :   [   '가나다라',
                            [
                                ['마바사', 'default', -20],
                                ['아자차', 'relationship', +30],
                                ['카타파하', 'grade', -29]
                            ],
                            2
                        ],
    3               :   [   '0',
                            [
                                ['1', 'grade', 1],
                                ['1', 'grade', 1],
                                ['1', 'grade', 1],
                                ['1', 'grade', 1],
                                ['1', 'grade', 1],
                                ['1', 'grade', 1]
                            ],
                            5
                        ]
}   

let color_Template = {
//  DEPARTMENT      :   [MAIN1,    SUB1,     SUB2,     SUB3,     SUB4,     SUB5,     SUB6,     SUB7,     SUB8,     SUB9    ]
    MATH            :   [0xBB4430, 0x7EBDC2, 0xF3DFA2, 0xEFE6DD, 0x88958D, 0x8693AB, 0x010400, 0xD3C1C3, 0x544B3D, 0x813405],
    PHYS            :   [0x065D7A, 0xDAEA60, 0x00D8CD, 0xEFF1C5, 0x2E1F27, 0x00A676, 0xE8EEF2, 0xB1740F, 0x4357AD, 0xF4E8C1],
    CHEM            :   [0x53131E, 0xB5D6B2, 0xFFFACC, 0xFFEFBD, 0xDD7373, 0x56666B, 0xCBD4C2, 0xF06449, 0xD3D0CB, 0xC96480],
    LIFE            :   [0x7DC95E, 0x648767, 0xBFC0C0, 0xCEE7E6, 0xE36397, 0x19381F, 0xA63A50, 0xEFB0A1, 0x92977E, 0xB8C480],
    MSE             :   [0x5F4842, 0xAF8D86, 0xC5C3C6, 0x1985A1, 0x17301C, 0xE3E4DB, 0x065143, 0xA49E8D, 0x0A0908, 0xB9314F],
    ME              :   [0xFFE74C, 0xFF5964, 0xFFFFFF, 0x38618C, 0x343434, 0x011936, 0x5D576B, 0xEDE3E4, 0xE2CFEA, 0x30323D],
    IME             :   [0x1F271B, 0x0B4F6C, 0xCBB9A8, 0xDCC7BE, 0x81717A, 0x8C2F39, 0xB9314F, 0x5A6650, 0x987284, 0x136F63],
    EE              :   [0x96939B, 0xE8E8E8, 0x564256, 0xFC814A, 0x2B2D42, 0x993955, 0xEE4266, 0xCAE7B9, 0x550C18, 0x46351D],
    CSE             :   [0x9DBEBB, 0xF4E9CD, 0x031926, 0xBCA3AC, 0xE0F2E9, 0x545F66, 0xCFD4C5, 0x5C4742, 0xEEF0F2, 0x230007],
    CE              :   [0xC6E0FF, 0x315659, 0x2978A0, 0xBCAB79, 0x0D0A0B, 0xDD6E42, 0x242038, 0xAF9164, 0xED6A5A, 0xB1C1C0],
    CITE            :   [0xADF7B6, 0xFCF5C7, 0xFFC09F, 0x79ADDC, 0xE0D3DE, 0x666A86, 0x51A3A3, 0x817F82, 0xF0F2EF, 0x020202],
    RAND            :   [0xADF7B6, 0xFCF5C7, 0xFFC09F, 0x79ADDC]
}

let lecture_information = {
//  LECTURE         :   INFORMATION
    현대예술의이해     :   "현대예술의이해를배웁니다",
    음악의이해        :   "dmakdkd",
    
}

let timetable_list = {
//  DEPARTMENT     :
//      MON                 TUE                 WED                 THR                 FRI
    MATH_1         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["",                "x음악의이해",         "",                 "x음악의이해",        ""                  ],  // 1
        ["x최적화개론",        "현대대수학I",         "x최적화개론",         "현대대수학I",        ""                  ],  // 2
        ["",                "해석학I",            "",                 "해석학I",           ""                  ],  // 3
        ["미분방정식",         "x법률의세계",         "미분방정식",          "x법률의세계",        ""                  ],  // 4
        ["x경제학원론",        "",                 "x경제학원론",         "",                 ""                 ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["",                "",                 "미분방정식",          "해석학I",           ""                  ],  // 7
        ["",                "",                 "현대대수학I",         "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    MATH_2         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["",                "",                 "",                 "",                 ""                  ],  // 1
        ["x고체역학",         "",                 "x고체역학",           "",                 ""                  ],  // 2
        ["x전자기학개론",      "해석학I",            "x전자기학개론",        "해석학I",           ""                  ],  // 3
        ["미분방정식",         "이산수학",           "미분방정식",          "이산수학",           ""                  ],  // 4
        ["",                "x게임이론",          "",                 "x게임이론",          ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["",                "",                 "미분방정식",          "해석학I",            ""                 ],  // 7
        ["",                "",                 "",                 "이산수학",           ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    MATH_3         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x집합론",           "x20세기세계사",       "x집합론",           "x20세기세계사",       ""                  ],  // 1
        ["",                "현대대수학I",         "",                 "현대대수학I",         ""                  ],  // 2
        ["",                "x객체지향프로그래밍",   "",                 "x객체지향프로그래밍",   ""                  ],  // 3
        ["미분방정식",         "",                 "미분방정식",          "",                 ""                  ],  // 4
        ["확률과통계",         "x경제학원론",         "확률과통계",         "x경제학원론",         ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["확률과통계",         "",                 "미분방정식",          "",                 ""                  ],  // 7
        ["",                "",                 "현대대수학I",         "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    PHYS_1         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x해석학I",          "양자물리II",         "x해석학I",          "양자물리II",          ""                  ],  // 1
        ["",                "열물리",             "",                 "열물리",            ""                  ],  // 2
        ["",                "x현대대수학I",        "",                 "x현대대수학I",       ""                  ],  // 3
        ["물리계측실험",       "",                 "",                 "",                 ""                  ],  // 4
        ["물리계측실험",       "x응용복소함수론",      "",                 "x응용복소함수론",      ""                  ],  // 5
        ["물리계측실험",       "x일본어초급",         "",                 "x일본어초급",         ""                  ],  // 6
        ["물리계측실험",       "",                 "x해석학I",           "",                 ""                  ],  // 7
        ["",                "양자물리II",         "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    PHYS_2         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x20세기세계사",      "양자물리II",         "x20세기세계사",       "양자물리II",         ""                  ],  // 1
        ["x예술학특강:글로벌축제의이해", "열물리",       "x예술학특강:글로벌축제의이해", "열물리",        ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["x경제학원론",        "물리계측실험",        "x경제학원론",         "",                 ""                  ],  // 4
        ["x법률의세계",        "물리계측실험",        "x법률의세계",         "",                 ""                  ],  // 5
        ["",                "물리계측실험",        "",                 "",                 ""                  ],  // 6
        ["",                "물리계측실험",        "",                 "",                 ""                  ],  // 7
        ["",                "양자물리II",         "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    PHYS_3         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x해석학I",          "양자물리II",         "x해석학I",           "양자물리II",         ""                  ],  // 1
        ["x예술학특강:글로벌축제의이해", "열물리",       "x예술학특강:글로벌축제의이해", "열물리",        ""                  ],  // 2
        ["",                "x현대대수학I",        "",                 "x현대대수학I",        ""                  ],  // 3
        ["",                "",                 "물리계측실험",         "",                 ""                  ],  // 4
        ["",                "x응용복소함수론",      "물리계측실험",         "x응용복소함수론",      ""                  ],  // 5
        ["",                "",                 "물리계측실험",         "",                 ""                  ],  // 6
        ["x해석학I",          "",                 "물리계측실험",         "",                 ""                  ],  // 7
        ["",                "",                 "양자물리II",          "",                 ""                  ],  // 8
        ["",                "",                 "",                  "",                 ""                  ]   // 9
    ],
    CSE_1         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["",                "",                 "",                 "",                 ""                  ],  // 1
        ["x이산수학",         "컴퓨터구조",          "x이산수학",          "컴퓨터구조",          ""                  ],  // 2
        ["x음악의이해",        "",                 "x음악의이해",         "",                 ""                  ],  // 3
        ["",                "프로그래밍언어",       "",                 "프로그래밍언어",       ""                  ],  // 4
        ["x경제학원론",        "x발표와토론",         "x경제학원론",         "x발표와토론",        ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["x이산수학",         "컴퓨터구조",          "",                 "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    CSE_2         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["컴퓨터네트워크",      "",                 "컴퓨터네트워크",       "",                 ""                  ],  // 1
        ["x이산수학",         "컴퓨터구조",          "x이산수학",          "컴퓨터구조",          ""                  ],  // 2
        ["x음악의이해",        "x논리와비판적사고",    "x음악의이해",         "x논리와비판적사고",     ""                  ],  // 3
        ["",                "",                 "",                 "",                 ""                  ],  // 4
        ["x경제학원론",        "",                 "x경제학원론",         "",                 ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["x이산수학",         "컴퓨터구조",          "",                 "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    CSE_3         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["컴퓨터네트워크",      "x해석학I",           "컴퓨터네트워크",      "x해석학I",           ""                  ],  // 1
        ["x이산수학",         "",                 "x이산수학",           "",                 ""                  ],  // 2
        ["x현대대수학I",       "x집합론",            "x현대대수학I",       "x집합론",            ""                  ],  // 3
        ["",                "프로그래밍언어",       "",                 "프로그래밍언어",       ""                  ],  // 4
        ["",                "",                 "",                 "",                 ""                  ],  // 5
        ["x확률과통계",        "",                 "x확률과통계",         "",                 ""                  ],  // 6
        ["x이산수학",         "",                 "",                 "x해석학I",           ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    IME_1         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x알고리즘",         "정보시스템기술",       "x알고리즘",          "정보시스템기술",       ""                  ],  // 1
        ["경영과학II",        "x데이터구조",         "경영과학II",          "x데이터구조",        ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["객체지향프로그래밍",   "제품생산공정설계I",    "객체지향프로그래밍",    "제품생산공정설계I",     ""                  ],  // 4
        ["x예술학특강:글로벌축제의이해",  "실험계획개론",  "x예술학특강:글로벌축제의이해", "실험계획개론",   ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["",                "",                 "",                 "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    IME_2         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x창업의실제",        "정보시스템기술",       "x창업의실제",        "정보시스템기술",       ""                  ],  // 1
        ["경영과학2",         "x경영학원론",         "경영과학2",          "x경영학원론",         ""                  ],  // 2
        ["비즈니스플래닝",      "",                 "비즈니스플래닝",       "",                 ""                  ],  // 3
        ["",                "제품생산공정설계1",    "",                 "제품생산공정설계1",     ""                  ],  // 4
        ["x창의적기업가정신응용", "실험계획개론",        "x창의적기업가정신응용", "실험계획개론",         ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["",                "",                 "",                 "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    IME_3         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["",                "정보시스템기술",       "",                 "정보시스템기술",       ""                  ],  // 1
        ["경영과학2",         "x비즈니스모델스튜디오",  "경영과학2",          "x비즈니스모델스튜디오",  ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["x데이터구조와알고리즘", "제품생산공정설계1",    "x데이터구조와알고리즘",  "제품생산공정설계1",    ""                  ],  // 4
        ["인터렉션디자인스튜디오","실험계획개론",        "인터렉션디자인스튜디오", "실험계획개론",         ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["",                "",                 "",                 "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    MSE_1         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["고분자소재개론",      "x일본어초급",         "고분자소재개론",       "x일본어초급",        ""                  ],  // 1
        ["세라믹소재개론",      "x현대예술의이해",      "세라믹소재개론",       "x현대예술의이해",      ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["미분방정식",         "소재물리",           "미분방정식",          "소재물리",           ""                  ],  // 4
        ["x회로이론",         "소재의기계적성질",      "x회로이론",          "소재의기계적성질",     ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["",                "",                 "",                 "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    MSE_2         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["고분자소재개론",      "x문화콘텐츠와스토리텔링","고분자소재개론",       "x문화콘텐츠와스토리텔링",""                  ],  // 1
        ["세라믹소재개론",      "x예술학특강:글로벌축제의이해", "세라믹소재개론",  "x예술학특강:글로벌축제의이해",""              ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["x현대예술의이해",     "소재물리",           "x현대예술의이해",      "소재물리",           ""                  ],  // 4
        ["",                "소재의기계적성질",      "",                 "소재의기계적성질",     ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["",                "신소재공학실험",       "",                 "",                 ""                  ],  // 7
        ["",                "신소재공학실험",       "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    MSE_3         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["고분자소재개론",      "x최적화개론",         "고분자소재개론",       "x최적화개론",        ""                  ],  // 1
        ["세라믹소재개론",      "",                 "세라믹소재개론",       "",                 ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["x경제학원론",        "소재물리",           "x경제학원론",         "소재물리",           ""                  ],  // 4
        ["x경영학원론",        "소재의기계적성질",     "x경영학원론",         "소재의기계적성질",     ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["신소재공학실험",      "",                 "",                 "",                 ""                  ],  // 7
        ["신소재공학실험",      "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    ME_1         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["열역학",            "",                 "열역학",            "",                 ""                  ],  // 1
        ["고체역학2",         "기계재료학",          "고체역학2",          "기계재료학",          ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["x응용복소함수론",     "동역학",             "x응용복소함수론",     "동역학",             ""                  ],  // 4
        ["x확률및통계",        "",                 "x확률및통계",        "",                 ""                  ],  // 5
        ["",                "기계공학개론",        "",                 "",                 ""                  ],  // 6
        ["",                "",                 "",                 "x응용복소함수론",      ""                  ],  // 7
        ["",                "",                 "",                 "x확률및통계",         ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    ME_2         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["",                "x음악의이해",         "",                 "x음악의이해",         ""                  ],  // 1
        ["고체역학2",         "기계재료학",          "고체역학2",          "기계재료학",          ""                  ],  // 2
        ["확률과통계",         "",                 "확률과통계",          "",                 ""                  ],  // 3
        ["",                "동역학",             "",                 "동역학",            ""                  ],  // 4
        ["x20세기세계사",      "",                 "x20세기세계사",       "",                 ""                  ],  // 5
        ["x경제학원론",        "기계공학개론",        "x경제학원론",         "기계공학개론",         ""                  ],  // 6
        ["",                "",                 "",                 "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    ME_3         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x영화의이해",        "",                 "x영화의이해",         "",                 ""                  ],  // 1
        ["고체역학2",         "기계재료학",          "고체역학2",          "기계재료학",          ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["응용복소함수론",      "동역학",             "응용복소함수론",       "동역학",            ""                  ],  // 4
        ["x회로이론",         "",                 "x회로이론",           "",                 ""                  ],  // 5
        ["x전자기학개론",      "기계공학개론",        "x전자기학개론",        "기계공학개론",         ""                  ],  // 6
        ["",                "",                 "응용복소함수론",       "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    CHEM_1         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["화학수학",          "x최적화개론",         "화학수학",           "x최적화개론",         ""                  ],  // 1
        ["x응용복소함수론",     "유기화학I(화학)",     "x응용복소함수론",      "유기화학I(화학)",      ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["화학분석",          "",                 "화학분석",           "",                 ""                  ],  // 4
        ["x현대물리",         "분석화학실험",        "x현대물리",          "",                 ""                  ],  // 5
        ["",                "분석화학실험",        "",                 "",                 ""                  ],  // 6
        ["",                "분석화학실험",        "",                 "x응용복소함수론",      ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    CHEM_2         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["화학수학",          "x지적재산권의이해",     "화학수학",           "x지적재산권의이해",    ""                  ],  // 1
        ["x법률의세계",        "유기화학I(화학)",     "x법률의세계",         "유기화학I(화학)",     ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["화학분석",          "",                 "화학분석",           "",                 ""                  ],  // 4
        ["x경제학원론",        "",                 "x경제학원론",         "분석화학실험",        ""                  ],  // 5
        ["",                "",                 "",                 "분석화학실험",        ""                  ],  // 6
        ["",                "",                 "",                 "분석화학실험",        ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    CHEM_3         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["화학수학",          "x데이터구조",         "화학수학",           "x데이터구조",         ""                  ],  // 1
        ["",                "유기화학I(화학)",     "",                 "유기화학I(화학)",      ""                  ],  // 2
        ["x미분방정식",        "",                 "x미분방정식",         "",                 ""                  ],  // 3
        ["x객체지향프로그래밍",  "",                 "x객체지향프로그래밍",   "",                 ""                  ],  // 4
        ["",                "",                 "",                 "분석화학실험",        ""                  ],  // 5
        ["",                "",                 "",                 "분석화학실험",        ""                  ],  // 6
        ["",                "",                 "x미분방정식",         "분석화학실험",        ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    LIFE_1         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x유기화학I(화학)",    "생명과학의원리",      "x유기화학I(화학)",    "생명과학의원리",       ""                  ],  // 1
        ["",                "x화학생명공학",       "",                 "x화학생명공학",        ""                  ],  // 2
        ["원리론",            "",                 "",                 "",                 ""                  ],  // 3
        ["원리론",            "생태학및야외실습",     "",                 "생태학및야외실습",      ""                  ],  // 4
        ["원리론",            "x서양문화사",         "",                 "x서양문화사",        ""                  ],  // 5
        ["원리론",            "",                 "",                 "",                 ""                  ],  // 6
        ["",                "",                 "",                 "",                 "생태학및야외실습"       ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    LIFE_2         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x최적화개론",        "생명과학의원리",       "x최적화개론",        "생명과학의원리",       ""                  ],  // 1
        ["",                "x게임이론",          "",                 "x게임이론",          ""                  ],  // 2
        ["",                "",                 "",                 "원리론",             ""                  ],  // 3
        ["생태학및야외실습",    "",                 "생태학및야외실습",      "원리론",             ""                  ],  // 4
        ["x경제학원론",        "",                 "x경제학원론",        "원리론",             ""                  ],  // 5
        ["",                "",                 "",                 "원리론",             ""                  ],  // 6
        ["",                "",                 "",                 "",                 "생태학및야외실습"       ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    LIFE_3         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x스페인어초급",       "x데이터구조",        "x스페인어초급",       "x데이터구조",         ""                  ],  // 1
        ["생명과학의원리",      "",                 "생명과학의원리",       "",                 ""                  ],  // 2
        ["",                "원리론",             "",                 "",                 ""                  ],  // 3
        ["생태학및야외실습",    "원리론",             "생태학및야외실습",      "",                 ""                  ],  // 4
        ["x객체지향프로그래밍",  "원리론",             "x객체지향프로그래밍",   "",                 ""                  ],  // 5
        ["",                "원리론",             "",                 "",                 ""                  ],  // 6
        ["",                "",                 "",                 "",                 "생태학및야외실습"       ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    CE_1         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x미분방정식",        "x잠의심리학",         "x미분방정식",         "x잠의심리학",        ""                  ],  // 1
        ["물리화학",          "유기화학",           "물리화학",            "유기화학",           ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["화학생명공학",       "화학생명공학실험",     "화학생명공학",         "",                 ""                  ],  // 4
        ["x경제학원론",        "화학생명공학실험",      "x경제학원론",        "",                 ""                  ],  // 5
        ["x서양문화사",        "화학생명공학실험",      "x서양문화사",        "",                 ""                  ],  // 6
        ["",                "",                 "x미분방정식",         "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    CE_2         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x한국근현대사의이해",  "x20세기세계사",       "x한국근현대사의이해",   "x20세기세계사",       ""                  ],  // 1
        ["물리화학",          "유기화학",           "물리화학",            "유기화학",           ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["화학생명공학",        "",                "화학생명공학",        "화학생명공학실험",      ""                  ],  // 4
        ["x학제간통합교양교육특강:현대문명과환경의이해","","x학제간통합교양교육특강:현대문명과환경의이해","화학생명공학실험",""         ],  // 5
        ["",                "",                 "",                 "화학생명공학실험",      ""                  ],  // 6
        ["",                "",                 "",                 "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    CE_3         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x법률의세계",        "",                 "x법률의세계",        "",                 ""                  ],  // 1
        ["물리화학",          "유기화학",           "물리화학",            "유기화학",           ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["화학생명공학",        "x독서토의",         "화학생명공학",        "x독서토의",           ""                  ],  // 4
        ["",                "",                 "화학생명공학실험",     "",                 ""                  ],  // 5
        ["",                "",                 "화학생명공학실험",     "",                 ""                  ],  // 6
        ["",                "",                 "화학생명공학실험",     "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    CITE_1         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["",                "",                 "",                 "",                 ""                  ],  // 1
        ["",                "",                 "",                 "",                 ""                  ],  // 2
        ["x객체지향프로그래밍",  "생명감성&트랜스휴먼스튜디오","x객체지향프로그래밍","생명감성&트랜스휴먼스튜디오",""               ],  // 3
        ["x데이터구조",        "생명감성&트랜스휴먼스튜디오","x데이터구조",      "생명감성&트랜스휴먼스튜디오",""               ],  // 4
        ["",                "창의IT설계II:기초설계", "",                 "",                 ""                  ],  // 5
        ["",                "창의IT설계II:기초설계", "",                 "",                 ""                  ],  // 6
        ["창의IT설계II:기초설계","창의IT설계II:기초설계", "",                 "",                 ""                 ],  // 7
        ["창의IT설계II:기초설계","",                 "창의IT설계II:기초설계", "",                 ""                 ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    CITE_2         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x현대대수학I",       "x해석학I",          "x현대대수학I",        "x해석학I",           ""                  ],  // 1
        ["",                "",                 "",                 "",                 ""                  ],  // 2
        ["인터렉션디자인스튜디오","",                 "인터렉션디자인스튜디오",  "",                 ""                  ],  // 3
        ["인터렉션디자인스튜디오","",                 "인터렉션디자인스튜디오",  "",                 ""                  ],  // 4
        ["",                "창의IT설계II:기초설계", "",                 "",                 ""                  ],  // 5
        ["",                "창의IT설계II:기초설계", "",                 "",                 ""                  ],  // 6
        ["창의IT설계II:기초설계","창의IT설계II:기초설계","x현대대수학I",        "",                 ""                  ],  // 7
        ["창의IT설계II:기초설계","x해석학I",          "창의IT설계II:기초설계", "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    CITE_3         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x유기화학I(화학)",   "융합적상상력과공학력디자인","x유기화학I(화학)",   "융합적상상력과공학력디자인",""                ],  // 1
        ["창의적기업가정신",    "",                 "창의적기업가정신",      "",                 ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["x세포생물학",        "",                 "x세포생물학",         "",                 ""                  ],  // 4
        ["",                "창의IT설계II:기초설계", "",                 "",                 ""                  ],  // 5
        ["",                "창의IT설계II:기초설계", "",                 "",                 ""                  ],  // 6
        ["창의IT설계II:기초설계","창의IT설계II:기초설계", "",                 "",                 ""                  ],  // 7
        ["창의IT설계II:기초설계","",                 "창의IT설계II:기초설계", "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    EE_1         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x음악의이해",        "반도체전자공학",       "x음악의이해",        "반도체전자공학",       ""                  ],  // 1
        ["디지털시스템설계",    "",                 "디지털시스템설계",      "",                 ""                  ],  // 2
        ["",                "x객체지향프로그래밍",   "",                 "x객체지향프로그래밍",   ""                  ],  // 3
        ["신호및시스템",       "데이터구조",          "신호및시스템",        "데이터구조",          ""                  ],  // 4
        ["",                "x법률의세계",         "",                 "x법률의세계",        ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["",                "",                 "",                 "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    EE_2         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x해석학I",          "반도체전자공학",       "x해석학I",          "반도체전자공학",       ""                  ],  // 1
        ["디지털시스템설계",    "x이산수학",           "디지털시스템설계",      "x이산수학",         ""                  ],  // 2
        ["확률및통계",         "",                 "확률및통계",          "",                 ""                  ],  // 3
        ["신호및시스템",       "x현대대수학I",        "신호및시스템",        "x현대대수학I",        ""                  ],  // 4
        ["",                "",                 "",                 "",                 ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["x해석학I",          "",                 "확률및통계",         "x현대대수학I",        ""                  ],  // 7
        ["",                "",                 "",                 "x이산수학",          ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    EE_3         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x현대물리",         "반도체전자공학",       "x현대물리",          "반도체전자공학",       ""                  ],  // 1
        ["디지털시스템설계",    "",                 "디지털시스템설계",      "",                 ""                  ],  // 2
        ["",                "x역학",             "",                 "x역학",             ""                  ],  // 3
        ["신호및시스템",       "x양자물리II",        "신호및시스템",        "x양자물리II",         ""                  ],  // 4
        ["",                "",                 "",                 "",                 ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["",                "",                 "",                 "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ]
}



var back_temp = new PIXI.Graphics();
back_temp.lineStyle(2, 0x0000FF, 0);
back_temp.beginFill(0xE5E4E0, 1);
back_temp.drawRect(-app_simulator.renderer.width/2, -app_simulator.renderer.height/2, 
                  app_simulator.renderer.width, app_simulator.renderer.height);
app_simulator.stage.addChild(back_temp);
    
// MAIN MENU
mainmenu = new PIXI.Sprite.fromImage('images/menu.png');
//mainmenu.scale.x *= 1;
//mainmenu.scale.y *= 1;
mainmenu.anchor.set(0.5);
mainmenu.x = 0;
mainmenu.y = 0;

button_new_game = new PIXI.Graphics();
button_achievement = new PIXI.Graphics(); ////////
button_new_game.beginFill(0xFFFFFF, 1);
button_new_game.drawRect(app_simulator.renderer.width*(-0.35), app_simulator.renderer.height*0.28, 
                     app_simulator.renderer.width*0.126, app_simulator.renderer.height*0.074);
button_new_game.buttonMode = true;
button_new_game.interactive = true;
button_new_game.alpha = 0;
button_new_game
    .on('pointerdown', new_game_onButtonDown);
/*
    .on('pointerup', new_game_onButtonUp)
    .on('pointerupoutside', new_game_onButtonUp)
    .on('pointerover', new_game_onButtonOver)
    .on('pointerout', new_game_onButtonOut);  
*/
    
function new_game_onButtonDown(){
    for (let i = 0; i < Department_choice_button.length; i++){
        app_simulator.stage.addChild(Department_choice_button[i]._department_button);
        app_simulator.stage.addChild(Department_choice_button[i]._select_button);
        app_simulator.stage.addChild(Department_choice_button[i]._return_button);
    }
        
    app_simulator.stage.removeChild(mainmenu);
    app_simulator.stage.removeChild(button_new_game);
    
    loading_menu_to_test();
    //enable_character_test();
    //this.isdown = true;
}


/*    
function new_game_onButtonUp(){
    
}
        
function new_game_onButtonOver(){    
    this.isOver = true;
    if (this.isdown){
        return;
    }
    //this.texture = icons_Texture[name+'_labeled'];
}

function new_game_onButtonOut(){
    this.isOver = false;
    if (this.isdown){
        return;
    }
    //this.texture = icons_Texture[name]; 
console.log(thisGame['department']);
    }
*/

    
function enable_main_menu(){
    app_simulator.stage.addChild(mainmenu); 
    app_simulator.stage.addChild(button_new_game);
}


enable_main_menu();


// CHARACTER TEST
class Character_test {
    constructor(question,
                 answer,
                 selected_num_available,
                 list
                ){
        
        let _thisclass = this;
        this._question = question;
        this._answer = answer;
        this._selected_num_available = selected_num_available;
        this._list = list;
        
        //////////////////////////////////////////////////////////
        this._question_center = new PIXI.Graphics();
        this._num_of_answers = this._answer.length;
        this._selected_num = 0;
        this._selected = [0, 0, 0, 0, 0, 0];
        this._i = 0;
  
        
        this._question_center.beginFill(color_Template[Department[4]][2]);
        this._question_center.lineStyle(10, color_Template[Department[4]][3], 1);        
        this._random_angle = Math.random()*2*Math.PI;
        for (this._i = 0; this._i<this._num_of_answers; this._i++){
            if (this._i == 0){                
                this._question_center.moveTo(
                    250*Math.cos((this._i*2*Math.PI + this._random_angle)/this._num_of_answers),
                    250*Math.sin((this._i*2*Math.PI + this._random_angle)/this._num_of_answers)
                );   
            } else {                
                this._question_center.lineTo(
                    250*Math.cos((this._i*2*Math.PI + this._random_angle)/this._num_of_answers),
                    250*Math.sin((this._i*2*Math.PI + this._random_angle)/this._num_of_answers)
                ); 
            }        
        }
        this._question_center.lineTo(
                250*Math.cos(this._random_angle/this._num_of_answers),
                250*Math.sin(this._random_angle/this._num_of_answers)
            );    
        this._question_center.endFill();
        
        //////////////////////////////////////////////////////////
        
        //this._answer_buttons = [];
        
        this._temp_index = 0;
        
        if (this._num_of_answers > 0){
            this._answer_buttons_0 = new PIXI.Graphics();
            //this._answer_buttons.push(new PIXI.Graphics()); 
            this._answer_buttons_0.beginFill(color_Template[Department[0]][2]);
            this._answer_buttons_0.lineStyle(0, color_Template[Department[0]][2], 0);  
            this._answer_buttons_0.moveTo(0,0);
            this._answer_buttons_0.lineTo(
                1102*Math.cos((this._random_angle)/this._num_of_answers),
                1102*Math.sin((this._random_angle)/this._num_of_answers)
            ); 
            this._answer_buttons_0.arc(
                0, 0, 2000, 
                0,
                (2*Math.PI + this._random_angle)/this._num_of_answers
            );
            this._answer_buttons_0.lineTo(0, 0);
            this._answer_buttons_0.endFill();
            
            this._answer_buttons_0.buttonMode = true;
            this._answer_buttons_0.interactive = true;
            this._answer_buttons_0.alpha = 0.6;
            
            
            this._answer_buttons_0
                .on('pointerdown', answer_onButtonDown_0)
                .on('pointerup', answer_onButtonUp_0)
                .on('pointerupoutside', answer_onButtonUp_0)
                .on('pointerover', answer_onButtonOver_0)
                .on('pointerout', answer_onButtonOut_0); 
            
            function answer_onButtonDown_0(){
                console.log(0);
                this.isdown = true;
                if (_thisclass._selected[0] == 0){
                    _thisclass._selected[0] = 1;
                    _thisclass._answer_buttons_0.alpha = 1;
                    if(_thisclass._answer[0][1] == 'grade'){
                        thisGame['stat'][2] += _thisclass._answer[0][2];
                        thisGame['stat'][1] += (Math.random()-0.5)*2;
                        thisGame['stat'][0] += (Math.random()-0.5)*2;
                    } else if(_thisclass._answer[0][1] == 'relationship'){
                        thisGame['stat'][2] += (Math.random()-0.5)*2;                    
                        thisGame['stat'][1] += _thisclass._answer[0][2];
                        thisGame['stat'][0] += (Math.random()-0.5)*2;
                    } else if(_thisclass._answer[0][1] == 'health'){
                        thisGame['stat'][2] += (Math.random()-0.5)*2;
                        thisGame['stat'][1] += (Math.random()-0.5)*2;
                        thisGame['stat'][0] += _thisclass._answer[0][2];
                    } else {
                        thisGame['stat'][2] += (Math.random()-0.5)*4;
                        thisGame['stat'][1] += (Math.random()-0.5)*4;
                        thisGame['stat'][0] += (Math.random()-0.5)*4;
                    }
                    console.log(thisGame['stat'][0]);
                    console.log(thisGame['stat'][1]);
                    console.log(thisGame['stat'][2]);
                    _thisclass._selected_num = _thisclass._selected_num + 1;
                }
                if (_thisclass._selected_num == _thisclass._selected_num_available){
                    character_test_run();
                    _thisclass.hide_this();
                }
            }
            function answer_onButtonUp_0(){
                if (this.isOver){
                } else {
                }
            }
            function answer_onButtonOver_0(){    
                this.isOver = true;
                if (this.isdown){
                    return;
                }
            }
            function answer_onButtonOut_0(){
                this.isOver = false;
                if (this.isdown){
                    return;
                }
            }
        }
        
        if (this._num_of_answers > 1){
            this._answer_buttons_1 = new PIXI.Graphics();
            //this._answer_buttons.push(new PIXI.Graphics()); 
            this._answer_buttons_1.beginFill(color_Template[Department[1]][2]);
            this._answer_buttons_1.lineStyle(0, color_Template[Department[1]][2], 0);  
            this._answer_buttons_1.moveTo(0,0);
            this._answer_buttons_1.lineTo(
                1102*Math.cos((2*Math.PI + this._random_angle)/this._num_of_answers),
                1102*Math.sin((2*Math.PI + this._random_angle)/this._num_of_answers)
            ); 
            this._answer_buttons_1.arc(
                0, 0, 1102, 
                (2*Math.PI + this._random_angle)/this._num_of_answers,
                (2*2*Math.PI + this._random_angle)/this._num_of_answers
            );
            this._answer_buttons_1.endFill();
            
            this._answer_buttons_1.buttonMode = true;
            this._answer_buttons_1.interactive = true;
            this._answer_buttons_1.alpha = 0.6;
            
            
            this._answer_buttons_1
                .on('pointerdown', answer_onButtonDown_1)
                .on('pointerup', answer_onButtonUp_1)
                .on('pointerupoutside', answer_onButtonUp_1)
                .on('pointerover', answer_onButtonOver_1)
                .on('pointerout', answer_onButtonOut_1); 
            
            function answer_onButtonDown_1(){
                this.isdown = true;
                if (_thisclass._selected[1] == 0){
                    _thisclass._selected[1] = 1;
                    _thisclass._answer_buttons_1.alpha = 1;
                    if(_thisclass._answer[1][1] == 'grade'){
                        thisGame['stat'][2] += _thisclass._answer[1][2];
                        thisGame['stat'][1] += (Math.random()-0.5)*2;
                        thisGame['stat'][0] += (Math.random()-0.5)*2;
                    } else if(_thisclass._answer[1][1] == 'relationship'){
                        thisGame['stat'][2] += (Math.random()-0.5)*2;                    
                        thisGame['stat'][1] += _thisclass._answer[1][2];
                        thisGame['stat'][0] += (Math.random()-0.5)*2;
                    } else if(_thisclass._answer[1][1] == 'health'){
                        thisGame['stat'][2] += (Math.random()-0.5)*2;
                        thisGame['stat'][1] += (Math.random()-0.5)*2;
                        thisGame['stat'][0] += _thisclass._answer[1][2];
                    } else {
                        thisGame['stat'][2] += (Math.random()-0.5)*4;
                        thisGame['stat'][1] += (Math.random()-0.5)*4;
                        thisGame['stat'][0] += (Math.random()-0.5)*4;
                    }
                    console.log(thisGame['stat'][0]);
                    console.log(thisGame['stat'][1]);
                    console.log(thisGame['stat'][2]);
                    _thisclass._selected_num = _thisclass._selected_num + 1;
                }
                if (_thisclass._selected_num == _thisclass._selected_num_available){
                    character_test_run();
                    _thisclass.hide_this();
                }
            }
            function answer_onButtonUp_1(){
                if (this.isOver){
                } else {
                }
            }
            function answer_onButtonOver_1(){    
                this.isOver = true;
                if (this.isdown){
                    return;
                }
            }
            function answer_onButtonOut_1(){
                this.isOver = false;
                if (this.isdown){
                    return;
                }
            }
        }
        
        if (this._num_of_answers > 2){
            this._answer_buttons_2 = new PIXI.Graphics();
            //this._answer_buttons.push(new PIXI.Graphics()); 
            this._answer_buttons_2.beginFill(color_Template[Department[2]][2]);
            this._answer_buttons_2.lineStyle(0, color_Template[Department[2]][2], 0);  
            this._answer_buttons_2.moveTo(0,0);
            this._answer_buttons_2.lineTo(
                1102*Math.cos((2*2*Math.PI + this._random_angle)/this._num_of_answers),
                1102*Math.sin((2*2*Math.PI + this._random_angle)/this._num_of_answers)
            ); 
            this._answer_buttons_2.arc(
                0, 0, 1102, 
                (2*2*Math.PI + this._random_angle)/this._num_of_answers,
                (3*2*Math.PI + this._random_angle)/this._num_of_answers
            );
            this._answer_buttons_2.endFill();
            
            this._answer_buttons_2.buttonMode = true;
            this._answer_buttons_2.interactive = true;
            this._answer_buttons_2.alpha = 0.6;
            
            
            this._answer_buttons_2
                .on('pointerdown', answer_onButtonDown_2)
                .on('pointerup', answer_onButtonUp_2)
                .on('pointerupoutside', answer_onButtonUp_2)
                .on('pointerover', answer_onButtonOver_2)
                .on('pointerout', answer_onButtonOut_2); 
            
            function answer_onButtonDown_2(){
                this.isdown = true;
                if (_thisclass._selected[2] == 0){
                    _thisclass._selected[2] = 1;
                    _thisclass._answer_buttons_2.alpha = 1;
                    if(_thisclass._answer[2][1] == 'grade'){
                        thisGame['stat'][2] += _thisclass._answer[2][2];
                        thisGame['stat'][1] += (Math.random()-0.5)*2;
                        thisGame['stat'][0] += (Math.random()-0.5)*2;
                    } else if(_thisclass._answer[2][1] == 'relationship'){
                        thisGame['stat'][2] += (Math.random()-0.5)*2;                    
                        thisGame['stat'][1] += _thisclass._answer[2][2];
                        thisGame['stat'][0] += (Math.random()-0.5)*2;
                    } else if(_thisclass._answer[2][1] == 'health'){
                        thisGame['stat'][2] += (Math.random()-0.5)*2;
                        thisGame['stat'][1] += (Math.random()-0.5)*2;
                        thisGame['stat'][0] += _thisclass._answer[2][2];
                    } else {
                        thisGame['stat'][2] += (Math.random()-0.5)*4;
                        thisGame['stat'][1] += (Math.random()-0.5)*4;
                        thisGame['stat'][0] += (Math.random()-0.5)*4;
                    }
                    console.log(thisGame['stat'][0]);
                    console.log(thisGame['stat'][1]);
                    console.log(thisGame['stat'][2]);
                    _thisclass._selected_num = _thisclass._selected_num + 1;
                }
                if (_thisclass._selected_num == _thisclass._selected_num_available){
                    character_test_run();
                   _thisclass.hide_this();
                }
            }
            function answer_onButtonUp_2(){
                if (this.isOver){
                } else {
                }
            }
            function answer_onButtonOver_2(){    
                this.isOver = true;
                if (this.isdown){
                    return;
                }
            }
            function answer_onButtonOut_2(){
                this.isOver = false;
                if (this.isdown){
                    return;
                }
            }
        }
        
        if (this._num_of_answers > 3){
            this._answer_buttons_3 = new PIXI.Graphics();
            //this._answer_buttons.push(new PIXI.Graphics()); 
            this._answer_buttons_3.beginFill(color_Template[Department[3]][2]);
            this._answer_buttons_3.lineStyle(0, color_Template[Department[3]][2], 0);  
            this._answer_buttons_3.moveTo(0,0);
            this._answer_buttons_3.lineTo(
                1102*Math.cos((3*2*Math.PI + this._random_angle)/this._num_of_answers),
                1102*Math.sin((3*2*Math.PI + this._random_angle)/this._num_of_answers)
            ); 
            this._answer_buttons_3.arc(
                0, 0, 1102, 
                (3*2*Math.PI + this._random_angle)/this._num_of_answers,
                (4*2*Math.PI + this._random_angle)/this._num_of_answers
            );
            this._answer_buttons_3.endFill();
            
            this._answer_buttons_3.buttonMode = true;
            this._answer_buttons_3.interactive = true;
            this._answer_buttons_3.alpha = 0.6;
            
            
            this._answer_buttons_3
                .on('pointerdown', answer_onButtonDown_3)
                .on('pointerup', answer_onButtonUp_3)
                .on('pointerupoutside', answer_onButtonUp_3)
                .on('pointerover', answer_onButtonOver_3)
                .on('pointerout', answer_onButtonOut_3); 
            
            function answer_onButtonDown_3(){
                this.isdown = true;
                if (_thisclass._selected[3] == 0){
                    _thisclass._selected[3] = 1;
                    _thisclass._answer_buttons_3.alpha = 1;
                    if(_thisclass._answer[3][1] == 'grade'){
                        thisGame['stat'][2] += _thisclass._answer[3][2];
                        thisGame['stat'][1] += (Math.random()-0.5)*2;
                        thisGame['stat'][0] += (Math.random()-0.5)*2;
                    } else if(_thisclass._answer[3][1] == 'relationship'){
                        thisGame['stat'][2] += (Math.random()-0.5)*2;                    
                        thisGame['stat'][1] += _thisclass._answer[3][2];
                        thisGame['stat'][0] += (Math.random()-0.5)*2;
                    } else if(_thisclass._answer[3][1] == 'health'){
                        thisGame['stat'][2] += (Math.random()-0.5)*2;
                        thisGame['stat'][1] += (Math.random()-0.5)*2;
                        thisGame['stat'][0] += _thisclass._answer[3][2];
                    } else {
                        thisGame['stat'][2] += (Math.random()-0.5)*4;
                        thisGame['stat'][1] += (Math.random()-0.5)*4;
                        thisGame['stat'][0] += (Math.random()-0.5)*4;
                    }
                    console.log(thisGame['stat'][0]);
                    console.log(thisGame['stat'][1]);
                    console.log(thisGame['stat'][2]);
                    _thisclass._selected_num = _thisclass._selected_num + 1;
                }  
                if (_thisclass._selected_num == _thisclass._selected_num_available){
                    character_test_run();
                    _thisclass.hide_this();
                }
            }
            function answer_onButtonUp_3(){
                if (this.isOver){
                } else {
                }
            }
            function answer_onButtonOver_3(){    
                this.isOver = true;
                if (this.isdown){
                    return;
                }
            }
            function answer_onButtonOut_3(){
                this.isOver = false;
                if (this.isdown){
                    return;
                }
            }
        }
        
        if (this._num_of_answers > 4){
            this._answer_buttons_4 = new PIXI.Graphics();
            //this._answer_buttons.push(new PIXI.Graphics()); 
            this._answer_buttons_4.beginFill(color_Template[Department[4]][2]);
            this._answer_buttons_4.lineStyle(0, color_Template[Department[4]][2], 0);  
            this._answer_buttons_4.moveTo(0,0);
            this._answer_buttons_4.lineTo(
                1102*Math.cos((4*2*Math.PI + this._random_angle)/this._num_of_answers),
                1102*Math.sin((4*2*Math.PI + this._random_angle)/this._num_of_answers)
            ); 
            this._answer_buttons_4.arc(
                0, 0, 1102, 
                (4*2*Math.PI + this._random_angle)/this._num_of_answers,
                (5*2*Math.PI + this._random_angle)/this._num_of_answers
            );
            this._answer_buttons_4.endFill();
            
            this._answer_buttons_4.buttonMode = true;
            this._answer_buttons_4.interactive = true;
            this._answer_buttons_4.alpha = 0.6;
            
            
            this._answer_buttons_4
                .on('pointerdown', answer_onButtonDown_4)
                .on('pointerup', answer_onButtonUp_4)
                .on('pointerupoutside', answer_onButtonUp_4)
                .on('pointerover', answer_onButtonOver_4)
                .on('pointerout', answer_onButtonOut_4); 
            
            function answer_onButtonDown_4(){
                this.isdown = true;
                if (_thisclass._selected[4] == 0){
                    _thisclass._selected[4] = 1;
                    _thisclass._answer_buttons_4.alpha = 1;
                    if(_thisclass._answer[4][1] == 'grade'){
                        thisGame['stat'][2] += _thisclass._answer[4][2];
                        thisGame['stat'][1] += (Math.random()-0.5)*2;
                        thisGame['stat'][0] += (Math.random()-0.5)*2;
                    } else if(_thisclass._answer[4][1] == 'relationship'){
                        thisGame['stat'][2] += (Math.random()-0.5)*2;                    
                        thisGame['stat'][1] += _thisclass._answer[4][2];
                        thisGame['stat'][0] += (Math.random()-0.5)*2;
                    } else if(_thisclass._answer[4][1] == 'health'){
                        thisGame['stat'][2] += (Math.random()-0.5)*2;
                        thisGame['stat'][1] += (Math.random()-0.5)*2;
                        thisGame['stat'][0] += _thisclass._answer[4][2];
                    } else {
                        thisGame['stat'][2] += (Math.random()-0.5)*4;
                        thisGame['stat'][1] += (Math.random()-0.5)*4;
                        thisGame['stat'][0] += (Math.random()-0.5)*4;
                    }
                    console.log(thisGame['stat'][0]);
                    console.log(thisGame['stat'][1]);
                    console.log(thisGame['stat'][2]);
                    _thisclass._selected_num = _thisclass._selected_num + 1;
                }
                if (_thisclass._selected_num == _thisclass._selected_num_available){
                    character_test_run();
                    _thisclass.hide_this();
                }
            }
            function answer_onButtonUp_4(){
                if (this.isOver){
                } else {
                }
            }
            function answer_onButtonOver_4(){    
                this.isOver = true;
                if (this.isdown){
                    return;
                }
            }
            function answer_onButtonOut_4(){
                this.isOver = false;
                if (this.isdown){
                    return;
                }
            }
        }
        
        if (this._num_of_answers > 5){
            this._answer_buttons_5 = new PIXI.Graphics();
            //this._answer_buttons.push(new PIXI.Graphics()); 
            this._answer_buttons_5.beginFill(color_Template[Department[5]][2]);
            this._answer_buttons_5.lineStyle(0, color_Template[Department[5]][2], 0);  
            this._answer_buttons_5.moveTo(0,0);
            this._answer_buttons_5.lineTo(
                1102*Math.cos((5*2*Math.PI + this._random_angle)/this._num_of_answers),
                1102*Math.sin((5*2*Math.PI + this._random_angle)/this._num_of_answers)
            ); 
            this._answer_buttons_5.arc(
                0, 0, 1102, 
                (5*2*Math.PI + this._random_angle)/this._num_of_answers,
                (6*2*Math.PI + this._random_angle)/this._num_of_answers
            );
            this._answer_buttons_5.endFill();
            
            this._answer_buttons_5.buttonMode = true;
            this._answer_buttons_5.interactive = true;
            this._answer_buttons_5.alpha = 0.6;
            
            
            this._answer_buttons_5
                .on('pointerdown', answer_onButtonDown_5)
                .on('pointerup', answer_onButtonUp_5)
                .on('pointerupoutside', answer_onButtonUp_5)
                .on('pointerover', answer_onButtonOver_5)
                .on('pointerout', answer_onButtonOut_5); 
            
            function answer_onButtonDown_5(){
                this.isdown = true;
                if (_thisclass._selected[5] == 0){
                    _thisclass._selected[5] = 1;
                    _thisclass._answer_buttons_5.alpha = 1;
                    if(_thisclass._answer[5][1] == 'grade'){
                        thisGame['stat'][2] += _thisclass._answer[5][2];
                        thisGame['stat'][1] += (Math.random()-0.5)*2;
                        thisGame['stat'][0] += (Math.random()-0.5)*2;
                    } else if(_thisclass._answer[5][1] == 'relationship'){
                        thisGame['stat'][2] += (Math.random()-0.5)*2;                    
                        thisGame['stat'][1] += _thisclass._answer[5][2];
                        thisGame['stat'][0] += (Math.random()-0.5)*2;
                    } else if(_thisclass._answer[5][1] == 'health'){
                        thisGame['stat'][2] += (Math.random()-0.5)*2;
                        thisGame['stat'][1] += (Math.random()-0.5)*2;
                        thisGame['stat'][0] += _thisclass._answer[5][2];
                    } else {
                        thisGame['stat'][2] += (Math.random()-0.5)*4;
                        thisGame['stat'][1] += (Math.random()-0.5)*4;
                        thisGame['stat'][0] += (Math.random()-0.5)*4;
                    }
                    console.log(thisGame['stat'][0]);
                    console.log(thisGame['stat'][1]);
                    console.log(thisGame['stat'][2]);
                    _thisclass._selected_num = _thisclass._selected_num + 1;
                }
                
                if (_thisclass._selected_num == _thisclass._selected_num_available){
                    character_test_run();
                    _thisclass.hide_this();
                }
            }
            function answer_onButtonUp_5(){
                if (this.isOver){
                } else {
                }
            }
            function answer_onButtonOver_5(){    
                this.isOver = true;
                if (this.isdown){
                    return;
                }
            }
            function answer_onButtonOut_5(){
                this.isOver = false;
                if (this.isdown){
                    return;
                }
            }
        }

    }
    show_this(){
        
        if (this._num_of_answers > 5) { app_simulator.stage.addChild(this._answer_buttons_5); }
        if (this._num_of_answers > 4) { app_simulator.stage.addChild(this._answer_buttons_4); }
        if (this._num_of_answers > 3) { app_simulator.stage.addChild(this._answer_buttons_3); }
        if (this._num_of_answers > 2) { app_simulator.stage.addChild(this._answer_buttons_2); }
        if (this._num_of_answers > 1) { app_simulator.stage.addChild(this._answer_buttons_1); }
        if (this._num_of_answers > 0) { app_simulator.stage.addChild(this._answer_buttons_0); } 
        app_simulator.stage.addChild(this._question_center);
    }
    hide_this(){
        app_simulator.stage.removeChild(this._question_center);
        if (this._num_of_answers > 5) { app_simulator.stage.removeChild(this._answer_buttons_5); }
        if (this._num_of_answers > 4) { app_simulator.stage.removeChild(this._answer_buttons_4); }
        if (this._num_of_answers > 3) { app_simulator.stage.removeChild(this._answer_buttons_3); }
        if (this._num_of_answers > 2) { app_simulator.stage.removeChild(this._answer_buttons_2); }
        if (this._num_of_answers > 1) { app_simulator.stage.removeChild(this._answer_buttons_1); }
        if (this._num_of_answers > 0) { app_simulator.stage.removeChild(this._answer_buttons_0); }     
    }
}
let Character_test_questions = [];
function enable_character_test(){
    for (let i = 0; i < Object.keys(question_List).length; i++){
        Character_test_questions.push(
            new Character_test(question_List[i][0], question_List[i][1], question_List[i][2], Character_test_questions)
        );
        
    }
    Character_test_questions[0].show_this();
}
function character_test_run(){
    console.log('a');
    for (let i = 1; i < Object.keys(question_List).length; i++){        
        if((Character_test_questions[i-1]._selected_num == 
           Character_test_questions[i-1]._selected_num_available) && 
          (Character_test_questions[i]._selected_num != 
           Character_test_questions[i]._selected_num_available)){
            console.log('aaa');
            Character_test_questions[i].show_this();
        } 
    }
    
    if (Character_test_questions[Object.keys(question_List).length - 1]._selected_num ==
       Character_test_questions[Object.keys(question_List).length - 1]._selected_num_available){
        // END TEST
        loading_test_to_department_choice()
        
    }
}

    
// DEPARTMENT CHOICE
class Department_choice {
    constructor(name, 
                 department_button_x, department_button_y, 
                 select_button_x, select_button_y,
                 list
                ){
        
        let _thisclass = this;
        this._name = name;
        this._object = icons_Texture[name];
        this._colorset = color_Template[name];
        this._department_button_x = department_button_x;
        this._department_button_y = department_button_y;
        this._select_button_x = select_button_x;
        this._select_button_y = select_button_y;
        this._return_button_x = select_button_x + 0.08;
        this._return_button_y = select_button_y;
        
        //////////////////////////////////////////////////////////
        this._department_button = new PIXI.Sprite(this._object);
        this._select_button = new PIXI.Graphics();
        this._return_button = new PIXI.Graphics();
        
        //////////////////////////////////////////////////////////
        this._department_button.scale.x *= 0.3;
        this._department_button.scale.y *= 0.3;
        this._department_button.buttonMode = true;
        this._department_button.anchor.set(0.5);
        this._department_button.x = app_simulator.renderer.width*this._department_button_x/2; 
        this._department_button.y = app_simulator.renderer.height*this._department_button_y/2;
        this._department_button.interactive = true;
        
        
        this._select_button.beginFill(color_Template[name][1], 1);
        this._select_button.drawRect(app_simulator.renderer.width*this._select_button_x/2 - 170, 
                                     app_simulator.renderer.height*this._select_button_y/2 - 40, 
                                     140, 80);
        this._select_button.beginFill(color_Template[name][0], 1);
        this._select_button.drawRect(app_simulator.renderer.width*this._select_button_x/2 - 160,
                                     app_simulator.renderer.height*this._select_button_y/2 - 30,
                                     120, 60);
        this._select_button.buttonMode = true;
        this._select_button.interactive = false;
        this._select_button.alpha = 0;
        
        this._return_button.beginFill(color_Template[name][3], 1);
        this._return_button.drawRect(app_simulator.renderer.width*this._return_button_x/2 - 20, 
                                     app_simulator.renderer.height*this._return_button_y/2 - 40, 
                                     140, 80);
        this._return_button.beginFill(color_Template[name][2], 1);
        this._return_button.drawRect(app_simulator.renderer.width*this._return_button_x/2 - 10,
                                     app_simulator.renderer.height*this._return_button_y/2 - 30,
                                     120, 60);
        this._return_button.buttonMode = true;
        this._return_button.interactive = false;
        this._return_button.alpha = 0;
        
        ///////////////////////////////////////////////////////////
        this._department_button
            .on('pointerdown', department_onButtonDown)
            .on('pointerup', department_onButtonUp)
            .on('pointerupoutside', department_onButtonUp)
            .on('pointerover', department_onButtonOver)
            .on('pointerout', department_onButtonOut);        

        function department_onButtonDown(){
            this.isdown = true;
            this.texture = icons_Texture[name+'_labeled']; 
            thisGame['department'] = _thisclass._name;
            console.log(thisGame['department']);
            _thisclass._select_button.interactive = true;
            _thisclass._select_button.alpha = 1;
            _thisclass._return_button.interactive = true;
            _thisclass._return_button.alpha = 1;
            for (let i = 0; i < list.length; i++){
                if (list[i]._name != thisGame['department']){
                    console.log('hi');
                    list[i]._department_button.alpha = 0;
                    list[i]._department_button.interactive = false;
                }
            }
        }
        
        function department_onButtonUp(){
            if (this.isOver){
                this.texture = icons_Texture[name+'_labeled'];
            } else {
                this.texture = icons_Texture[name];
            }
        }
        
        function department_onButtonOver(){    
            this.isOver = true;
            if (this.isdown){
                return;
            }
            this.texture = icons_Texture[name+'_labeled'];
        }

        function department_onButtonOut(){
            this.isOver = false;
            if (this.isdown){
                return;
            }
            this.texture = icons_Texture[name];
            console.log(thisGame['department']);

        }
        
        ///////////////////////////////////////////////////////////
        this._select_button
            .on('pointerdown', select_onButtonDown)
            .on('pointerup', select_onButtonUp)
            .on('pointerupoutside', select_onButtonUp)
            .on('pointerover', select_onButtonOver)
            .on('pointerout', select_onButtonOut);
        
        
        function select_onButtonDown(){
            this.isdown = true;
            //this.texture = icons_Texture[name+'_labeled']; 
            //thisGame['department'] = _thisclass._name;
            console.log(thisGame['department'] + 'confirmed');
            for (let i = 0; i < list.length; i++){
                app_simulator.stage.removeChild(list[i]._department_button);
                app_simulator.stage.removeChild(list[i]._select_button);
                app_simulator.stage.removeChild(list[i]._return_button);
            }
            department_choice_to_select_timetable()
            
        }
        
        function select_onButtonUp(){
            if (this.isOver){
                //this.texture = icons_Texture[name+'_labeled'];
            } else {
                //this.texture = icons_Texture[name];
            }
        }
        
        function select_onButtonOver(){    
            this.isOver = true;
            if (this.isdown){
                return;
            }
            //this.texture = icons_Texture[name+'_labeled'];
        }

        function select_onButtonOut(){
            this.isOver = false;
            if (this.isdown){
                return;
            }
            //this.texture = icons_Texture[name];
            console.log(thisGame['department']);

        }
        
        ///////////////////////////////////////////////////////////
        this._return_button
            .on('pointerdown', return_onButtonDown)
            .on('pointerup', return_onButtonUp)
            .on('pointerupoutside', return_onButtonUp)
            .on('pointerover', return_onButtonOver)
            .on('pointerout', return_onButtonOut);
        
        
        function return_onButtonDown(){
            this.isdown = true;
            //this.texture = icons_Texture[name+'_labeled']; 
            //thisGame['department'] = _thisclass._name;
            console.log(thisGame['department'] + 'confirmed');
            for (let i = 0; i < list.length; i++){
                if (list[i]._name != thisGame['department']){
                    list[i]._department_button.interactive = true;
                    list[i]._department_button.alpha = 1;
                }
            }
            _thisclass._select_button.interactive = false;
            _thisclass._select_button.alpha = 0;
            _thisclass._return_button.interactive = false;
            _thisclass._return_button.alpha = 0;
            
        }
        
        function return_onButtonUp(){
            if (this.isOver){
                //this.texture = icons_Texture[name+'_labeled'];
            } else {
                //this.texture = icons_Texture[name];
            }
        }
        
        function return_onButtonOver(){    
            this.isOver = true;
            if (this.isdown){
                return;
            }
            //this.texture = icons_Texture[name+'_labeled'];
        }

        function return_onButtonOut(){
            this.isOver = false;
            if (this.isdown){
                return;
            }
            //this.texture = icons_Texture[name];
            console.log(thisGame['department']);

        }
        
        app_simulator.stage.addChild(this._department_button);
        app_simulator.stage.addChild(this._select_button);
        app_simulator.stage.addChild(this._return_button);
        
    }
    
}
let Department_choice_button = [];
function enable_department_choice(){
    Department_choice_button.push(new Department_choice(Department[0], -0.66, -0.2, -0.3, 0.05, Department_choice_button));
    Department_choice_button.push(new Department_choice(Department[1], -0.22, -0.2, 0.14, 0.05, Department_choice_button));
    Department_choice_button.push(new Department_choice(Department[2], 0.22, -0.2, 0.58, 0.05, Department_choice_button));
    Department_choice_button.push(new Department_choice(Department[3], 0.66, -0.2, 0.24, 0.05, Department_choice_button));
    Department_choice_button.push(new Department_choice(Department[4], -0.66, 0.15, -0.3, 0.4, Department_choice_button));
    Department_choice_button.push(new Department_choice(Department[5], -0.22, 0.15, 0.14, 0.4, Department_choice_button));
    Department_choice_button.push(new Department_choice(Department[6], 0.22, 0.15, 0.58, 0.4, Department_choice_button));
    Department_choice_button.push(new Department_choice(Department[7], 0.66, 0.15, 0.24, 0.4, Department_choice_button));
    Department_choice_button.push(new Department_choice(Department[8], -0.66, 0.5, -0.3, 0.75, Department_choice_button));
    Department_choice_button.push(new Department_choice(Department[9], -0.22, 0.5, 0.14, 0.75, Department_choice_button));
    Department_choice_button.push(new Department_choice(Department[10], 0.22, 0.5, 0.58, 0.75, Department_choice_button));
    Department_choice_button.push(new Department_choice('RAND', 0.66, 0.5, 0.24, 0.75, Department_choice_button));
}


class select_timetable {
    constructor(department){
        let _thisclass = this;
        this._department = department;
        this._selected = 0;
        this._timetable = new Array(10);
        for (let i = 0; i < 10; i++){
            this._timetable[i] = new Array(5);
            for (let j = 0; j < 5; j++){
                this._timetable[i][j] = ""; // <<<< CHNAGE DATA STRUCTURE
            }
        }
        
        this._timetable_graphics = new Array(10);
        for (let i = 0; i < 10; i++){
            this._timetable_graphics[i] = new Array(5);
            for (let j = 0; j < 5; j++){
                this._timetable_graphics[i][j] = new PIXI.Graphics();
                this._timetable_graphics[i][j].beginFill(0xFFFFFF);
                this._timetable_graphics[i][j].drawRect(150*(j-5), i*72-240, 120, 50);
            }
        }
        
        this._template_buttons = [];
        
        
        this._option_buttons = [];
        this._lecture_additional_name_control = [];
        
        this._template_buttons.push(new PIXI.Graphics());
        this._template_buttons.push(new PIXI.Graphics());
        this._template_buttons.push(new PIXI.Graphics());
        
        this._template_buttons[0].beginFill(color_Template[department][2]);
        this._template_buttons[1].beginFill(color_Template[department][2]);
        this._template_buttons[2].beginFill(color_Template[department][2]);
        
        this._template_buttons[0].drawRect(630, -148, 100, 50);
        this._template_buttons[1].drawRect(630, 52, 100, 50);
        this._template_buttons[2].drawRect(630, 252, 100, 50);
        
        for (let i = 0; i < 3; i++){
            this._template_buttons[i].buttonMode = true;
            this._template_buttons[i].interactive = true;
            this._template_buttons[i].alpha = 1;
            this._template_buttons[i].over = false;
            this._template_buttons[i]
                .on('pointerdown', template_onButtonDown)
                .on('pointerup', template_onButtonUp)
                .on('pointeroutside', template_onButtonUp)
                .on('pointerover', template_onButtonOver)
                .on('pointerout', template_onButtonOut)
        }
        
        function template_onButtonDown(){
            console.log(_thisclass._timetable);
            _thisclass.update_timetable_graphics();
            for (let i = 0; i < 3; i++){
                _thisclass._template_buttons[i].buttonMode = false;
                _thisclass._template_buttons[i].interactive = false;
                app_simulator.stage.removeChild(_thisclass._template_buttons[i]);
            }
            
            for (let j = 0; j < 10; j++){
                for (let k = 0; k < 5; k++){
                    if (timetable_list[_thisclass._department+'_'+_thisclass._selected][j][k][0] == "x"){
                        _thisclass._temp = timetable_list[_thisclass._department+'_'+_thisclass._selected][j][k].slice(1);                        
                        if (_thisclass._lecture_additional_name_control.indexOf(_thisclass._temp) == -1){
                            _thisclass._lecture_additional_name_control.push(_thisclass._temp);
                            _thisclass._lecture_additional_name_control.push(0);

                            _thisclass._option_buttons.push(new PIXI.Graphics());
                            _thisclass._option_buttons[_thisclass._option_buttons.length - 1].beginFill(0xBBBBBB);
                            _thisclass._option_buttons[_thisclass._option_buttons.length - 1]
                                .drawRect(300, (_thisclass._option_buttons.length - 1)*150-240, 500, 100);
                            _thisclass._option_buttons[_thisclass._option_buttons.length - 1].buttonMode = true;
                            _thisclass._option_buttons[_thisclass._option_buttons.length - 1].interactive = true;
                            _thisclass._option_buttons[_thisclass._option_buttons.length - 1].alpha = 0.6;
                            _thisclass._option_buttons[_thisclass._option_buttons.length - 1]._selected = 0;
                            _thisclass._option_buttons[_thisclass._option_buttons.length - 1]._my_address = _thisclass._option_buttons.length -1;
                            _thisclass._option_buttons[_thisclass._option_buttons.length - 1]
                                .on('pointerdown', option_onButtonDown)
                                .on('pointerup', option_onButtonUp)
                                .on('pointeroutside', option_onButtonUp)
                                .on('pointerover', option_onButtonOver)
                                .on('pointerout', option_onButtonOut)
                            
                            app_simulator.stage.addChild(_thisclass._option_buttons[_thisclass._option_buttons.length - 1]);
                        }
                    }
                }
            }
            
            function option_onButtonDown(){
                if (this._selected == 0){
                    this._selected = 1;
                                        
                    for (let j = 0; j < 10; j++){
                        for (let k = 0; k < 5; k++){
                            
                        }
                    }
                } else {
                    this._selected = 0;
                }
            }
            function option_onButtonUp(){

            }
            function option_onButtonOver(){
                this.alpha = 1;
                for (let j = 0; j < 10; j++){
                    for (let k = 0; k < 5; k++){
                        if (timetable_list[_thisclass._department+'_'+_thisclass._selected][j][k] == "x" + _thisclass._lecture_additional_name_control[this._my_address*2]){
                            _thisclass._timetable[j][k] =  "x" + _thisclass._lecture_additional_name_control[this._my_address*2];
                            console.log(_thisclass._timetable[j][k]);
                        }   
                    }
                }
                _thisclass.update_timetable_graphics();
                console.log(_thisclass._lecture_additional_name_control[this._my_address*2]);
            }
            function option_onButtonOut(){
            for (let j = 0; j < 10; j++){
                for (let k = 0; k < 5; k++){
                    if (timetable_list[_thisclass._department+'_'+_thisclass._selected][j][k] == "x" + _thisclass._lecture_additional_name_control[this._my_address*2]){
                        if (this._selected == 0){
                            _thisclass._timetable[j][k] = "";
                            this.alpha = 0.6;
                        }
                    }   
                }
            }
                _thisclass.update_timetable_graphics();

            }

            console.log('hi');
        }
        function template_onButtonUp(){
            console.log('hi');
            _thisclass.update_timetable_graphics();
        }
        function template_onButtonOver(){
            this.over = true;
            for (let i = 1; i < 4; i++){
                if (_thisclass._template_buttons[i-1].over == true){  
                    for (let j = 0; j < 10; j++){
                        for (let k = 0; k < 5; k++){
                            if (timetable_list[_thisclass._department+'_'+i][j][k][0] != "x"){
                                _thisclass._timetable[j][k] = timetable_list[_thisclass._department+'_'+i][j][k] // <<<< CHNAGE DATA STRUCTURE 
                            }
                        }
                    }
                    _thisclass._selected = i;
                }
            }
            _thisclass.update_timetable_graphics();
        }
        
        function template_onButtonOut(){
            this.over = false;
            if (_thisclass._template_buttons[0].over == false 
                && _thisclass._template_buttons[1].over == false
                && _thisclass._template_buttons[2].over == false
               ) {
                for (let i = 0; i < 10; i++){
                    for (let j = 0; j < 5; j++){
                        _thisclass._timetable[i][j] = ""; // <<<< CHNAGE DATA STRUCTURE
                    }
                }
                _thisclass.update_timetable_graphics();
            }
        }

        for (let i = 0; i < _thisclass._option_buttons.length; i++){
            this._option_buttons[i].buttonMode = true;
            this._option_buttons[i].interactive = true;
            this._option_buttons[i].alpha = 1;
            this._option_buttons[i]
                .on('pointerdown', option_onButtonDown)
                .on('pointerup', option_onButtonUp)
                .on('pointeroutside', option_onButtonUp)
                .on('pointerover', option_onButtonOver)
                .on('pointerout', option_onButtonOut)
            app_simulator.stage.addChild(_thisclass._option_buttons[i]);
        }
        
        this._confirm_button = new PIXI.Graphics();
        this._confirm_button.beginFill(0x000000);
        this._confirm_button.drawRect(300, 400, 500, 100);
        
        this._confirm_button.buttonMode = true;
        this._confirm_button.interactive = true;
        
        this._confirm_button.alpha = 0.6;
        
        this._confirm_button
            .on('pointerdown', confirm_onButtonDown)
            .on('pointerup', confirm_onButtonUp)
            .on('pointeroutside', confirm_onButtonUp)
            .on('pointerover', confirm_onButtonOver)
            .on('pointerout', confirm_onButtonOut)
        
        function confirm_onButtonDown(){
            
        }
        function confirm_onButtonUp(){
            
        }
        function confirm_onButtonOver(){
            this.alpha = 1;
        }
        function confirm_onButtonOut(){
            this.alpha = 0.6;      
        }
        
        app_simulator.stage.addChild(this._confirm_button);

        
    }
    show_timetable(){
        for (let i = 0; i < 10; i++){
            for (let j = 0; j < 5; j++){
                app_simulator.stage.addChild(this._timetable_graphics[i][j]);
            }
        }
    }
    show_templates(){
        for (let i = 0; i < 3; i++){
            app_simulator.stage.addChild(this._template_buttons[i]);
        }
    }  
    update_timetable_graphics(){
        this._lecture_name_control = [];
        this._option_lecture_name_control = [];
        for (let i = 0; i < 10; i++){
            for (let j = 0; j < 5; j++){
                this._timetable_graphics[i][j].clear();
                if (this._timetable[i][j] == ""){
                    this._timetable_graphics[i][j].beginFill(0xFFFFFF);
                } else {
                    if (this._lecture_name_control.indexOf(this._timetable[i][j]) == -1 && this._timetable[i][j][0] != "x"){
                        this._lecture_name_control.push(this._timetable[i][j]);
                    } 
                    this._timetable_graphics[i][j].beginFill(
                        color_Template[this._department][this._lecture_name_control.indexOf(this._timetable[i][j])]);
                }
                if (this._timetable[i][j][0] != "x"){
                    this._timetable_graphics[i][j].drawRect(150*(j-5), i*72-240, 120, 50);   
                }
            }
        }
        for (let i = 0; i < 10; i++){
            for (let j = 0; j < 5; j++){
                if (this._timetable[i][j][0] == "x"){
                    if (this._lecture_name_control.indexOf(this._timetable[i][j].slice(1)) == -1){
                        this._option_lecture_name_control.push(this._timetable[i][j].slice(1));    
                    } 
                    this._timetable_graphics[i][j].beginFill(
                        color_Template[this._department][this._lecture_additional_name_control.indexOf(this._timetable[i][j].slice(1))/2 + this._lecture_name_control.length]);
                }
                this._timetable_graphics[i][j].drawRect(150*(j-5), i*72-240, 120, 50);   
            }
        }

    }   
}

function loading_menu_to_test() {
    var style = new PIXI.TextStyle({
        fontFamily: 'Arial',
        fontSize: 80,
        fill: ['#ffffff'], // gradient
        stroke: '#4a1850',
        strokeThickness: 5,
        dropShadow: true,
        dropShadowColor: '#000000',
        dropShadowBlur: 4,
        dropShadowAngle: Math.PI / 6,
        dropShadowDistance: 6,
        wordWrap: true,
        wordWrapWidth: 440
    });
    
    let loadingText = new PIXI.Text('text goes here', style);
    loadingText.anchor.set(0.5);
    loadingText.x = 0;
    loadingText.y = 0;
   
    
    let loading_status = new PIXI.Graphics();
    
    
    //var bar1 = new PIXI.Graphics();
    //bar1.lineStyle(2,color_Template[Department[Math.floor(Math.random()*12)]][1],0.3);
    //console.log(Department[Math.floor(Math.random()*12)]);
    //bar1.beginFill(color_Template[Department[Math.floor(Math.random()*12)]][1], 0);

    //bar1.drawRect(-300,-310,600,50);
    //app_simulator.stage.addChild(bar1);
    
    //var graphics = new PIXI.Graphics();
    //graphics.lineStyle(2,color_Template[Department[Math.floor(Math.random()*12)]][2],0.3);
    //graphics.beginFill(color_Template[Department[Math.floor(Math.random()*12)]][2], 1);
    //graphics.drawRect(-300,-310, 0, 50);
  
    //graphics.endFill();
    //app_simulator.stage.addChild(graphics);
    
    app_simulator.stage.addChild(loading_status);
    
    let color_temp_0 = color_Template[Department[Math.floor(Math.random()*11)]][0];
    let color_temp_1 = color_Template[Department[Math.floor(Math.random()*11)]][1];
    
    let t = 0;
 
    Ticker_loading_menu_to_test = new PIXI.ticker.Ticker();
    Ticker_loading_menu_to_test.start();
    loading_status.beginFill(color_Template[Department[Math.floor(Math.random()*11)]][0], 1);
    
    Ticker_loading_menu_to_test.add(function(delta=1) {
        
        loading_status.clear();
        
        loading_status.beginFill(color_temp_1, 1);
        loading_status.arc(0,0,410,-Math.PI/2, -Math.PI/2+t/280);
        loading_status.beginFill(color_temp_0, 1);
        loading_status.drawCircle(0,0,380);
    
        t+=delta*3;
         app_simulator.stage.addChild(loadingText);
        //graphics.drawRect(-300, -310, t/10, 50);
        //console.log(a);
        
        if(t > 1800)
        {
            app_simulator.stage.removeChild(loadingText);
            //app_simulator.stage.removeChild(bar1);
            //app_simulator.stage.removeChild(graphics);
            app_simulator.stage.removeChild(loading_status);
            
            Ticker_loading_menu_to_test.stop();
            enable_character_test();
                
        }
    });
    
}


function loading_test_to_department_choice() {
    
    let loading_status_2 = new PIXI.Graphics();
    

    app_simulator.stage.addChild(loading_status_2);
    
    let color_temp_0 = color_Template[Department[Math.floor(Math.random()*11)]][0];
    let color_temp_1 = color_Template[Department[Math.floor(Math.random()*11)]][1];
    
    let t = 0;
 
    Ticker_loading_menu_to_test = new PIXI.ticker.Ticker();
    Ticker_loading_menu_to_test.start();
    loading_status_2.beginFill(color_Template[Department[Math.floor(Math.random()*11)]][0], 1);
    
    Ticker_loading_menu_to_test.add(function(delta=1) {
        
        loading_status_2.clear();
        
        loading_status_2.beginFill(color_temp_1, 1);
        loading_status_2.arc(0,0,410,-Math.PI/2, -Math.PI/2+t/280);
        loading_status_2.beginFill(color_temp_0, 1);
        loading_status_2.drawCircle(0,0,380);
    
        t+=delta*3;
         //app_simulator.stage.addChild(loadingText);
        //graphics.drawRect(-300, -310, t/10, 50);
        //console.log(a);
        
        if(t > 1800)
        {
            //app_simulator.stage.removeChild(loadingText);
            //app_simulator.stage.removeChild(bar1);
            //app_simulator.stage.removeChild(graphics);
            app_simulator.stage.removeChild(loading_status_2);
            
            Ticker_loading_menu_to_test.stop();
            enable_department_choice();
                
        }
    });
    
}


function department_choice_to_select_timetable() {
    
    let loading_status_3 = new PIXI.Graphics();
    

    app_simulator.stage.addChild(loading_status_3);
    
    let color_temp_0 = color_Template[Department[Math.floor(Math.random()*11)]][0];
    let color_temp_1 = color_Template[Department[Math.floor(Math.random()*11)]][1];
    
    let t = 0;
 
    Ticker_department_choice_to_select_timetable = new PIXI.ticker.Ticker();
    Ticker_department_choice_to_select_timetable.start();
    loading_status_3.beginFill(color_Template[Department[Math.floor(Math.random()*11)]][0], 1);
    
    Ticker_department_choice_to_select_timetable.add(function(delta=1) {
        
        loading_status_3.clear();
        
        loading_status_3.beginFill(color_temp_1, 1);
        loading_status_3.arc(0,0,410,-Math.PI/2, -Math.PI/2+t/280);
        loading_status_3.beginFill(color_temp_0, 1);
        loading_status_3.drawCircle(0,0,380);
    
        t+=delta*3;
         //app_simulator.stage.addChild(loadingText);
        //graphics.drawRect(-300, -310, t/10, 50);
        //console.log(a);
        
        if(t > 1800)
        {
            //app_simulator.stage.removeChild(loadingText);
            //app_simulator.stage.removeChild(bar1);
            //app_simulator.stage.removeChild(graphics);
            app_simulator.stage.removeChild(loading_status_3);
            
            Ticker_department_choice_to_select_timetable.stop();
            if (thisGame['department'] == 'RAND'){
                thisGame['department'] = Department[Math.floor(Math.random(11))];
            }
            let select_table = new select_timetable(thisGame['department']);
            select_table.show_timetable();
            select_table.show_templates();
        }
    });
    
}

