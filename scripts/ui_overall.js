var app_simulator = new PIXI.Application(1920, 1080, {transparent : true});
document.body.appendChild(app_simulator.view);

app_simulator.stage.position.set(
    app_simulator.renderer.width*0.5, app_simulator.renderer.height*0.5);
let this_stat = {
    health          :   1,
    relationship    :   0,
    grade           :   0
}


let Timetable = new Array(10);
for (let i = 0; i < 10; i++){
    Timetable[i] = new Array(5);
    for (let j = 0; j < 5; j++){
        Timetable[i][j] = "";
    }
}


let Department = {
// DEPARTMENT   :   VALUE
    MATH        :   0,      0   :   'MATH',
    PHYS        :   1,      1   :   'PHYS',
    CHEM        :   2,      2   :   'CHEM',
    LIFE        :   3,      3   :   'LIFE',
    MSE         :   4,      4   :   'MSE',
    ME          :   5,      5   :   'ME',
    IME         :   6,      6   :   'IME',
    EE          :   7,      7   :   'EE',
    CSE         :   8,      8   :   'CSE',
    CE          :   9,      9   :   'CE',
    CITE        :   10,     10  :   'CITE'
}

let icons_Texture = {
//  DEPARTMENT(_~~) :
    MATH            :   PIXI.Texture.fromImage('images/departments/01_MATH_black.png'),
    MATH_labeled    :   PIXI.Texture.fromImage('images/departments/01_MATH_black_labeled.png'),
    PHYS            :   PIXI.Texture.fromImage('images/departments/02_PHYS_black.png'),
    PHYS_labeled    :   PIXI.Texture.fromImage('images/departments/02_PHYS_black_labeled.png'),
    CHEM            :   PIXI.Texture.fromImage('images/departments/03_CHEM_black.png'),
    CHEM_labeled    :   PIXI.Texture.fromImage('images/departments/03_CHEM_black_labeled.png'),
    LIFE            :   PIXI.Texture.fromImage('images/departments/04_LIFE_black.png'),
    LIFE_labeled    :   PIXI.Texture.fromImage('images/departments/04_LIFE_black_labeled.png'),
    MSE             :   PIXI.Texture.fromImage('images/departments/05_MSE_black.png'),
    MSE_labeled     :   PIXI.Texture.fromImage('images/departments/05_MSE_black_labeled.png'),
    ME              :   PIXI.Texture.fromImage('images/departments/06_ME_black.png'),
    ME_labeled      :   PIXI.Texture.fromImage('images/departments/06_ME_black_labeled.png'),
    IME             :   PIXI.Texture.fromImage('images/departments/07_IME_black.png'),
    IME_labeled     :   PIXI.Texture.fromImage('images/departments/07_IME_black_labeled.png'),
    EE              :   PIXI.Texture.fromImage('images/departments/08_EE_black.png'),
    EE_labeled      :   PIXI.Texture.fromImage('images/departments/08_EE_black_labeled.png'),
    CSE             :   PIXI.Texture.fromImage('images/departments/09_CSE_black.png'),
    CSE_labeled     :   PIXI.Texture.fromImage('images/departments/09_CSE_black_labeled.png'),
    CE              :   PIXI.Texture.fromImage('images/departments/10_CE_black.png'),
    CE_labeled      :   PIXI.Texture.fromImage('images/departments/10_CE_black_labeled.png'),
    CITE            :   PIXI.Texture.fromImage('images/ang.png'),  // TEMPORARY
    CITE_labeled    :   PIXI.Texture.fromImage('images/sibal.png'),
    RAND            :   PIXI.Texture.fromImage('images/hohoho.png'),
    RAND_labeled    :   PIXI.Texture.fromImage('images/hahaha.png')
}

let question_List = {
//  QUESTION        :   [QUESTION,
//                       ANSWER-AFFECT-VALUE ARRAY]
    0               :   [   '잘 지내요?',
                            [
                                ['네', 'default', +0],
                                ['네니오', 'default', +0],
                                ['아니오', 'default', +0]
                            ],
                            1
                        ],
    1               :   [   '휴학하고 싶죠?',
                            [
                                ['네!', 'default', +0],
                                ['네!', 'default', +0],
                                ['네!', 'default', +0]
                            ],
                            1
                        ],
    2               :   [   '술은 좋아해요?',
                            [
                                ['네!', 'relationship', +0.02],
                                ['그럭저럭..', 'default', +0],
                                ['싫어요!', 'grade', +0]
                            ],
                            1
                        ],
    3               :   [   '공부하기 싫죠?',
                            [
                                ['네!', 'grade', -0.03],
                                ['아니요 좋은데요?', 'grade', +0.01],
                                ['그럭저럭..', 'grade', 0]
                            ],
                            1
                        ],
    4               :   [   '휴학하고 싶죠?',
                            [
                                ['네!', 'default', +0],
                                ['네!', 'default', +0],
                                ['네!', 'default', +0]
                            ],
                            1
                        ]
}

let color_Template = {
//  DEPARTMENT      :   [MAIN1,    SUB1,     SUB2,     SUB3,     SUB4,     SUB5,     SUB6,     SUB7,     SUB8,     SUB9    ]
    MATH            :   [0xBB4430, 0x7EBDC2, 0xF3DFA2, 0xEFE6DD, 0x88958D, 0x8693AB, 0x010400, 0xD3C1C3, 0x544B3D, 0x813405],
    PHYS            :   [0x065D7A, 0xDAEA60, 0x00D8CD, 0xEFF1C5, 0x2E1F27, 0x00A676, 0xE8EEF2, 0xB1740F, 0x4357AD, 0xF4E8C1],
    CHEM            :   [0x53131E, 0xB5D6B2, 0xFFFACC, 0xFFEFBD, 0xDD7373, 0x56666B, 0xCBD4C2, 0xF06449, 0xD3D0CB, 0xC96480],
    LIFE            :   [0x7DC95E, 0x648767, 0xBFC0C0, 0xCEE7E6, 0xE36397, 0x19381F, 0xA63A50, 0xEFB0A1, 0x92977E, 0xB8C480],
    MSE             :   [0x5F4842, 0xAF8D86, 0xC5C3C6, 0x1985A1, 0x17301C, 0xE3E4DB, 0x065143, 0xA49E8D, 0x0A0908, 0xB9314F],
    ME              :   [0xFFE74C, 0xFF5964, 0xFFFFFF, 0x38618C, 0x343434, 0x011936, 0x5D576B, 0xEDE3E4, 0xE2CFEA, 0x30323D],
    IME             :   [0x1F271B, 0x0B4F6C, 0xCBB9A8, 0xDCC7BE, 0x81717A, 0x8C2F39, 0xB9314F, 0x5A6650, 0x987284, 0x136F63],
    EE              :   [0x96939B, 0xE8E8E8, 0x564256, 0xFC814A, 0x2B2D42, 0x993955, 0xEE4266, 0xCAE7B9, 0x550C18, 0x46351D],
    CSE             :   [0x9DBEBB, 0xF4E9CD, 0x031926, 0xBCA3AC, 0xE0F2E9, 0x545F66, 0xCFD4C5, 0x5C4742, 0xEEF0F2, 0x230007],
    CE              :   [0xC6E0FF, 0x315659, 0x2978A0, 0xBCAB79, 0x0D0A0B, 0xDD6E42, 0x242038, 0xAF9164, 0xED6A5A, 0xB1C1C0],
    CITE            :   [0xADF7B6, 0xFCF5C7, 0xFFC09F, 0x79ADDC, 0xE0D3DE, 0x666A86, 0x51A3A3, 0x817F82, 0xF0F2EF, 0x020202],
    RAND            :   [0xADF7B6, 0xFCF5C7, 0xFFC09F, 0x79ADDC]
}

let timetable_list = {
//  DEPARTMENT     :
//      MON                 TUE                 WED                 THR                 FRI
    MATH_1         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["",                "x음악의이해",         "",                 "x음악의이해",        ""                  ],  // 1
        ["x최적화개론",        "현대대수학I",         "x최적화개론",         "현대대수학I",        ""                  ],  // 2
        ["",                "해석학I",            "",                 "해석학I",           ""                  ],  // 3
        ["미분방정식",         "x법률의세계",         "미분방정식",          "x법률의세계",        ""                  ],  // 4
        ["x경제학원론",        "",                 "x경제학원론",         "",                 ""                 ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["",                "",                 "미분방정식",          "해석학I",           ""                  ],  // 7
        ["",                "",                 "현대대수학I",         "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    MATH_2         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["",                "",                 "",                 "",                 ""                  ],  // 1
        ["x고체역학I",        "",                 "x고체역학I",          "",                 ""                  ],  // 2
        ["x전자기학개론",      "해석학I",            "x전자기학개론",        "해석학I",           ""                  ],  // 3
        ["미분방정식",         "이산수학",           "미분방정식",          "이산수학",           ""                  ],  // 4
        ["",                "x게임이론",          "",                 "x게임이론",          ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["",                "",                 "미분방정식",          "해석학I",            ""                 ],  // 7
        ["",                "",                 "",                 "이산수학",           ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    MATH_3         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x집합론",           "x20세기세계사",       "x집합론",           "x20세기세계사",       ""                  ],  // 1
        ["",                "현대대수학I",         "",                 "현대대수학I",         ""                  ],  // 2
        ["",                "x객체지향프로그래밍",   "",                 "x객체지향프로그래밍",   ""                  ],  // 3
        ["미분방정식",         "",                 "미분방정식",          "",                 ""                  ],  // 4
        ["확률및통계",         "x경제학원론",         "확률및통계",         "x경제학원론",         ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["확률및통계",         "",                 "미분방정식",          "",                 ""                  ],  // 7
        ["",                "",                 "현대대수학I",         "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    PHYS_1         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x해석학I",          "양자물리II",         "x해석학I",          "양자물리II",          ""                  ],  // 1
        ["",                "열물리",             "",                 "열물리",            ""                  ],  // 2
        ["",                "x현대대수학I",        "",                 "x현대대수학I",       ""                  ],  // 3
        ["물리계측실험",       "",                 "",                 "",                 ""                  ],  // 4
        ["물리계측실험",       "x응용복소함수론",      "",                 "x응용복소함수론",      ""                  ],  // 5
        ["물리계측실험",       "x일본어초급",         "",                 "x일본어초급",         ""                  ],  // 6
        ["물리계측실험",       "",                 "x해석학I",           "",                 ""                  ],  // 7
        ["",                "양자물리II",         "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    PHYS_2         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x20세기세계사",      "양자물리II",         "x20세기세계사",       "양자물리II",         ""                  ],  // 1
        ["x예술학특강:글로벌축제의이해", "열물리",       "x예술학특강:글로벌축제의이해", "열물리",        ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["x경제학원론",        "물리계측실험",        "x경제학원론",         "",                 ""                  ],  // 4
        ["x법률의세계",        "물리계측실험",        "x법률의세계",         "",                 ""                  ],  // 5
        ["",                "물리계측실험",        "",                 "",                 ""                  ],  // 6
        ["",                "물리계측실험",        "",                 "",                 ""                  ],  // 7
        ["",                "양자물리II",         "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    PHYS_3         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x해석학I",          "양자물리II",         "x해석학I",           "양자물리II",         ""                  ],  // 1
        ["x예술학특강:글로벌축제의이해", "열물리",       "x예술학특강:글로벌축제의이해", "열물리",        ""                  ],  // 2
        ["",                "x현대대수학I",        "",                 "x현대대수학I",        ""                  ],  // 3
        ["",                "",                 "물리계측실험",         "",                 ""                  ],  // 4
        ["",                "x응용복소함수론",      "물리계측실험",         "x응용복소함수론",      ""                  ],  // 5
        ["",                "",                 "물리계측실험",         "",                 ""                  ],  // 6
        ["x해석학I",          "",                 "물리계측실험",         "",                 ""                  ],  // 7
        ["",                "",                 "양자물리II",          "",                 ""                  ],  // 8
        ["",                "",                 "",                  "",                 ""                  ]   // 9
    ],
    CSE_1         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["",                "",                 "",                 "",                 ""                  ],  // 1
        ["x이산수학",         "컴퓨터구조",          "x이산수학",          "컴퓨터구조",          ""                  ],  // 2
        ["x음악의이해",        "",                 "x음악의이해",         "",                 ""                  ],  // 3
        ["",                "프로그래밍언어",       "",                 "프로그래밍언어",       ""                  ],  // 4
        ["x경제학원론",        "x발표와토론",         "x경제학원론",         "x발표와토론",        ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["x이산수학",         "컴퓨터구조",          "",                 "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    CSE_2         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["컴퓨터네트워크",      "",                 "컴퓨터네트워크",       "",                 ""                  ],  // 1
        ["x이산수학",         "컴퓨터구조",          "x이산수학",          "컴퓨터구조",          ""                  ],  // 2
        ["x음악의이해",        "x논리와비판적사고",    "x음악의이해",         "x논리와비판적사고",     ""                  ],  // 3
        ["",                "",                 "",                 "",                 ""                  ],  // 4
        ["x경제학원론",        "",                 "x경제학원론",         "",                 ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["x이산수학",         "컴퓨터구조",          "",                 "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    CSE_3         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["컴퓨터네트워크",      "x해석학I",           "컴퓨터네트워크",      "x해석학I",           ""                  ],  // 1
        ["x이산수학",         "",                 "x이산수학",           "",                 ""                  ],  // 2
        ["x현대대수학I",       "x집합론",            "x현대대수학I",       "x집합론",            ""                  ],  // 3
        ["",                "프로그래밍언어",       "",                 "프로그래밍언어",       ""                  ],  // 4
        ["",                "",                 "",                 "",                 ""                  ],  // 5
        ["x확률및통계",        "",                 "x확률및통계",         "",                 ""                  ],  // 6
        ["x이산수학",         "",                 "",                 "x해석학I",           ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    IME_1         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x알고리즘",         "정보시스템기술",       "x알고리즘",          "정보시스템기술",       ""                  ],  // 1
        ["경영과학II",        "x데이터구조",         "경영과학II",          "x데이터구조",        ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["객체지향프로그래밍",   "제품생산공정설계I",    "객체지향프로그래밍",    "제품생산공정설계I",     ""                  ],  // 4
        ["x예술학특강:글로벌축제의이해",  "실험계획개론",  "x예술학특강:글로벌축제의이해", "실험계획개론",   ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["",                "",                 "",                 "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    IME_2         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x확률및통계",        "정보시스템기술",       "x확률및통계",        "정보시스템기술",       ""                  ],  // 1
        ["경영과학II",        "x경영학원론",         "경영과학II",         "x경영학원론",         ""                  ],  // 2
        ["미분방정식",         "",                 "미분방정식",          "",                 ""                  ],  // 3
        ["",                "제품생산공정설계1",    "",                 "제품생산공정설계1",     ""                  ],  // 4
        ["x응용복소함수론",     "실험계획개론",        "x응용복소함수론",      "실험계획개론",         ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["",                "",                 "미분방정식",          "",                 ""                  ],  // 7
        ["",                "",                 "x확률및통계",         "x응용복소함수론",      ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    IME_3         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["",                "정보시스템기술",       "",                 "정보시스템기술",       ""                  ],  // 1
        ["경영과학II",        "x창의적기업가정신응용",  "경영과학II",         "x창의적기업가정신응용",  ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["x데이터구조와알고리즘", "제품생산공정설계1",    "x데이터구조와알고리즘",  "제품생산공정설계1",    ""                  ],  // 4
        ["인터렉션디자인스튜디오","실험계획개론",        "인터렉션디자인스튜디오", "실험계획개론",         ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["",                "",                 "",                 "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    MSE_1         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["고분자소재개론",      "x일본어초급",         "고분자소재개론",       "x일본어초급",        ""                  ],  // 1
        ["세라믹소재개론",      "x현대예술의이해",      "세라믹소재개론",       "x현대예술의이해",      ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["미분방정식",         "소재물리",           "미분방정식",          "소재물리",           ""                  ],  // 4
        ["x회로이론",         "소재의기계적성질",      "x회로이론",          "소재의기계적성질",     ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["",                "",                 "",                 "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    MSE_2         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["고분자소재개론",      "x문화콘텐츠와스토리텔링","고분자소재개론",       "x문화콘텐츠와스토리텔링",""                  ],  // 1
        ["세라믹소재개론",      "x예술학특강:글로벌축제의이해", "세라믹소재개론",  "x예술학특강:글로벌축제의이해",""              ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["x현대예술의이해",     "소재물리",           "x현대예술의이해",      "소재물리",           ""                  ],  // 4
        ["",                "소재의기계적성질",      "",                 "소재의기계적성질",     ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["",                "신소재공학실험",       "",                 "",                 ""                  ],  // 7
        ["",                "신소재공학실험",       "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    MSE_3         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["고분자소재개론",      "x최적화개론",         "고분자소재개론",       "x최적화개론",        ""                  ],  // 1
        ["세라믹소재개론",      "",                 "세라믹소재개론",       "",                 ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["x경제학원론",        "소재물리",           "x경제학원론",         "소재물리",           ""                  ],  // 4
        ["x경영학원론",        "소재의기계적성질",     "x경영학원론",         "소재의기계적성질",     ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["신소재공학실험",      "",                 "",                 "",                 ""                  ],  // 7
        ["신소재공학실험",      "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    ME_1         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["열역학",            "",                 "열역학",            "",                 ""                  ],  // 1
        ["고체역학II",         "기계재료학",          "고체역학II",          "기계재료학",          ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["x응용복소함수론",     "동역학",             "x응용복소함수론",     "동역학",             ""                  ],  // 4
        ["x확률및통계",        "",                 "x확률및통계",        "",                 ""                  ],  // 5
        ["",                "기계공학개론I",        "",                 "",                 ""                  ],  // 6
        ["",                "",                 "",                 "x응용복소함수론",      ""                  ],  // 7
        ["",                "",                 "",                 "x확률및통계",         ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    ME_2         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["",                "x음악의이해",         "",                 "x음악의이해",         ""                  ],  // 1
        ["고체역학II",         "기계재료학",          "고체역학II",          "기계재료학",          ""                  ],  // 2
        ["확률및통계",         "",                 "확률및통계",          "",                 ""                  ],  // 3
        ["",                "동역학",             "",                 "동역학",            ""                  ],  // 4
        ["x20세기세계사",      "",                 "x20세기세계사",       "",                 ""                  ],  // 5
        ["x경제학원론",        "기계공학개론I",        "x경제학원론",         "기계공학개론",         ""                  ],  // 6
        ["",                "",                 "",                 "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    ME_3         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x영화의이해",        "",                 "x영화의이해",         "",                 ""                  ],  // 1
        ["고체역학II",         "기계재료학",          "고체역학II",          "기계재료학",          ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["응용복소함수론",      "동역학",             "응용복소함수론",       "동역학",            ""                  ],  // 4
        ["x회로이론",         "",                 "x회로이론",           "",                 ""                  ],  // 5
        ["x전자기학개론",      "기계공학개론I",        "x전자기학개론",        "기계공학개론",         ""                  ],  // 6
        ["",                "",                 "응용복소함수론",       "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    CHEM_1         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["화학수학",          "x최적화개론",         "화학수학",           "x최적화개론",         ""                  ],  // 1
        ["x응용복소함수론",     "유기화학I(화학)",     "x응용복소함수론",      "유기화학I(화학)",      ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["화학분석",          "",                 "화학분석",           "",                 ""                  ],  // 4
        ["x현대물리",         "분석화학실험",        "x현대물리",          "",                 ""                  ],  // 5
        ["",                "분석화학실험",        "",                 "",                 ""                  ],  // 6
        ["",                "분석화학실험",        "",                 "x응용복소함수론",      ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    CHEM_2         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["화학수학",          "x지적재산권의이해",     "화학수학",           "x지적재산권의이해",    ""                  ],  // 1
        ["x법률의세계",        "유기화학I(화학)",     "x법률의세계",         "유기화학I(화학)",     ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["화학분석",          "",                 "화학분석",           "",                 ""                  ],  // 4
        ["x경제학원론",        "",                 "x경제학원론",         "분석화학실험",        ""                  ],  // 5
        ["",                "",                 "",                 "분석화학실험",        ""                  ],  // 6
        ["",                "",                 "",                 "분석화학실험",        ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    CHEM_3         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["화학수학",          "x데이터구조",         "화학수학",           "x데이터구조",         ""                  ],  // 1
        ["",                "유기화학I(화학)",     "",                 "유기화학I(화학)",      ""                  ],  // 2
        ["x미분방정식",        "",                 "x미분방정식",         "",                 ""                  ],  // 3
        ["x객체지향프로그래밍",  "",                 "x객체지향프로그래밍",   "",                 ""                  ],  // 4
        ["",                "",                 "",                 "분석화학실험",        ""                  ],  // 5
        ["",                "",                 "",                 "분석화학실험",        ""                  ],  // 6
        ["",                "",                 "x미분방정식",         "분석화학실험",        ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    LIFE_1         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x유기화학I(화학)",    "생명과학의원리",      "x유기화학I(화학)",    "생명과학의원리",       ""                  ],  // 1
        ["",                "x화학생명공학",       "",                 "x화학생명공학",        ""                  ],  // 2
        ["원리론",            "",                 "",                 "",                 ""                  ],  // 3
        ["원리론",            "생태학및야외실습",     "",                 "생태학및야외실습",      ""                  ],  // 4
        ["원리론",            "x서양문화사",         "",                 "x서양문화사",        ""                  ],  // 5
        ["원리론",            "",                 "",                 "",                 ""                  ],  // 6
        ["",                "",                 "",                 "",                 "생태학및야외실습"       ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    LIFE_2         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x최적화개론",        "생명과학의원리",       "x최적화개론",        "생명과학의원리",       ""                  ],  // 1
        ["",                "x게임이론",          "",                 "x게임이론",          ""                  ],  // 2
        ["",                "",                 "",                 "원리론",             ""                  ],  // 3
        ["생태학및야외실습",    "",                 "생태학및야외실습",      "원리론",             ""                  ],  // 4
        ["x경제학원론",        "",                 "x경제학원론",        "원리론",             ""                  ],  // 5
        ["",                "",                 "",                 "원리론",             ""                  ],  // 6
        ["",                "",                 "",                 "",                 "생태학및야외실습"       ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    LIFE_3         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x스페인어초급",       "x데이터구조",        "x스페인어초급",       "x데이터구조",         ""                  ],  // 1
        ["생명과학의원리",      "",                 "생명과학의원리",       "",                 ""                  ],  // 2
        ["",                "원리론",             "",                 "",                 ""                  ],  // 3
        ["생태학및야외실습",    "원리론",             "생태학및야외실습",      "",                 ""                  ],  // 4
        ["x객체지향프로그래밍",  "원리론",             "x객체지향프로그래밍",   "",                 ""                  ],  // 5
        ["",                "원리론",             "",                 "",                 ""                  ],  // 6
        ["",                "",                 "",                 "",                 "생태학및야외실습"       ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    CE_1         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x미분방정식",        "x잠의심리학",         "x미분방정식",         "x잠의심리학",        ""                  ],  // 1
        ["화공물리화학I",          "유기화학I(화공)",      "화공물리화학I",            "유기화학I(화공)",           ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["화학생명공학",       "화학생명공학실험",     "화학생명공학",         "",                 ""                  ],  // 4
        ["x경제학원론",        "화학생명공학실험",      "x경제학원론",        "",                 ""                  ],  // 5
        ["x서양문화사",        "화학생명공학실험",      "x서양문화사",        "",                 ""                  ],  // 6
        ["",                "",                 "x미분방정식",         "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    CE_2         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x한국근현대사의이해",  "x20세기세계사",       "x한국근현대사의이해",   "x20세기세계사",       ""                  ],  // 1
        ["화공물리화학I",          "유기화학I(화공)",      "화공물리화학I",           "유기화학I(화공)",           ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["화학생명공학",        "",                "화학생명공학",        "화학생명공학실험",      ""                  ],  // 4
        ["x학제간통합교양교육특강:현대문명과환경의이해","","x학제간통합교양교육특강:현대문명과환경의이해","화학생명공학실험",""         ],  // 5
        ["",                "",                 "",                 "화학생명공학실험",      ""                  ],  // 6
        ["",                "",                 "",                 "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    CE_3         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x법률의세계",        "",                 "x법률의세계",        "",                 ""                  ],  // 1
        ["화공물리화학I",          "유기화학I(화공)",      "화공물리화학I",           "유기화학I(화공)",     ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["화학생명공학",        "x독서토의",         "화학생명공학",        "x독서토의",           ""                  ],  // 4
        ["",                "",                 "화학생명공학실험",     "",                 ""                  ],  // 5
        ["",                "",                 "화학생명공학실험",     "",                 ""                  ],  // 6
        ["",                "",                 "화학생명공학실험",     "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    CITE_1         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["",                "",                 "",                 "",                 ""                  ],  // 1
        ["",                "",                 "",                 "",                 ""                  ],  // 2
        ["x객체지향프로그래밍",  "생명감성&트랜스휴먼스튜디오","x객체지향프로그래밍","생명감성&트랜스휴먼스튜디오",""               ],  // 3
        ["x데이터구조",        "생명감성&트랜스휴먼스튜디오","x데이터구조",      "생명감성&트랜스휴먼스튜디오",""               ],  // 4
        ["",                "창의IT설계II:기초설계", "",                 "",                 ""                  ],  // 5
        ["",                "창의IT설계II:기초설계", "",                 "",                 ""                  ],  // 6
        ["창의IT설계II:기초설계","창의IT설계II:기초설계", "",                 "",                 ""                 ],  // 7
        ["창의IT설계II:기초설계","",                 "창의IT설계II:기초설계", "",                 ""                 ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    CITE_2         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x응용복소함수론",     "x미분방정식",         "x응용복소함수론",     "x미분방정식",          ""                  ],  // 1
        ["",                "",                 "",                 "",                 ""                  ],  // 2
        ["인터렉션디자인스튜디오","",                 "인터렉션디자인스튜디오",  "",                 ""                  ],  // 3
        ["인터렉션디자인스튜디오","",                 "인터렉션디자인스튜디오",  "",                 ""                  ],  // 4
        ["",                "창의IT설계II:기초설계", "",                 "",                 ""                  ],  // 5
        ["",                "창의IT설계II:기초설계", "",                 "",                 ""                  ],  // 6
        ["창의IT설계II:기초설계","창의IT설계II:기초설계","x응용복소함수론",       "",                 ""                  ],  // 7
        ["창의IT설계II:기초설계","x미분방정식",         "창의IT설계II:기초설계", "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    CITE_3         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x유기화학I(화학)",   "융합적상상력과공학력디자인", "x유기화학I(화학)",  "융합적상상력과공학력디자인", ""               ],  // 1
        ["창의적기업가정신응용",  "",                 "창의적기업가정신응용",  "",                 ""                  ],  // 2
        ["",                "",                 "",                 "",                 ""                  ],  // 3
        ["x세포생물학",        "",                 "x세포생물학",         "",                 ""                  ],  // 4
        ["",                "창의IT설계II:기초설계", "",                 "",                 ""                  ],  // 5
        ["",                "창의IT설계II:기초설계", "",                 "",                 ""                  ],  // 6
        ["창의IT설계II:기초설계","창의IT설계II:기초설계","",                 "",                 ""                  ],  // 7
        ["창의IT설계II:기초설계","",                 "창의IT설계II:기초설계","",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    EE_1         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x음악의이해",        "반도체전자공학I",       "x음악의이해",        "반도체전자공학I",       ""                  ],  // 1
        ["디지털시스템설계",    "",                 "디지털시스템설계",      "",                 ""                  ],  // 2
        ["",                "x객체지향프로그래밍",   "",                 "x객체지향프로그래밍",   ""                  ],  // 3
        ["신호및시스템",       "데이터구조",          "신호및시스템",        "데이터구조",          ""                  ],  // 4
        ["",                "x법률의세계",         "",                 "x법률의세계",        ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["",                "",                 "",                 "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    EE_2         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x해석학I",          "반도체전자공학I",       "x해석학I",          "반도체전자공학I",       ""                  ],  // 1
        ["디지털시스템설계",    "x이산수학",           "디지털시스템설계",      "x이산수학",         ""                  ],  // 2
        ["확률및통계",         "",                 "확률및통계",          "",                 ""                  ],  // 3
        ["신호및시스템",       "x현대대수학I",        "신호및시스템",        "x현대대수학I",        ""                  ],  // 4
        ["",                "",                 "",                 "",                 ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["x해석학I",          "",                 "확률및통계",         "x현대대수학I",        ""                  ],  // 7
        ["",                "",                 "",                 "x이산수학",          ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ],
    EE_3         :
    [   ["",                "",                 "",                 "",                 ""                  ],  // 0
        ["x현대물리",         "반도체전자공학I",       "x현대물리",          "반도체전자공학I",       ""                  ],  // 1
        ["디지털시스템설계",    "",                 "디지털시스템설계",      "",                 ""                  ],  // 2
        ["",                "x역학",             "",                 "x역학",             ""                  ],  // 3
        ["신호및시스템",       "x양자물리II",        "신호및시스템",        "x양자물리II",         ""                  ],  // 4
        ["",                "",                 "",                 "",                 ""                  ],  // 5
        ["",                "",                 "",                 "",                 ""                  ],  // 6
        ["",                "",                 "",                 "",                 ""                  ],  // 7
        ["",                "",                 "",                 "",                 ""                  ],  // 8
        ["",                "",                 "",                 "",                 ""                  ]   // 9
    ]
}

let lecture_information = {

//  LECTURE         :	INFORMATION
//MATH 2학년 1학기

//가이드라인과목
현대대수학I  :   "앞으로 수학과 과목을 수강하기 위해 필수로 수강해야 할 기초 과목 중의 하나입니다. 해석학과 함께 수학의 중요한 두 갈래를 구성하는 과목으로서, 군(group), 환(ring), 체(field)의 정의와 중요한 예시, 그리고 관련된 여러 개념들과 예시에 대해서 학습하는 과목입니다.",
해석학I    :   "앞으로 수학과 과목을 수강하기 위해 필수로 수강해야 할 기초 과목 중의 하나입니다. 현대대수학과 함께 수학의 중요한 두 갈래를 구성하는 과목으로서, 과목 초반에는 openness, closedness와 같은 point topology에 대해서 학습하고, 후반부에는 해석학의 중요 정리들과 활용에 대해서 배우게 됩니다.",
미분방정식	:  "수학과 뿐만아니라 타학과 학생들조차도 미적분학이나 응용선형대수만큼 필수적으로 알고 있어야 하는 미분방정식의 해법에 대해 배웁니다. 난이도를 그렇게 어렵지 않으나 미분방정식의 형태에 따른 풀이법을 고등학교 수학처럼 손에 익히는 과정이 필요합니다.",
확률및통계	:  "고등학교 확률및통계의 내용에서 더 나아가 여러 분포에 대해서 배우고 예시에 대해서 배우는 과목이다. 난이도가 높지 않아 수학과 학생 중 4학년이 되도록 수강하지 않은 사람도 꽤 된다.",
이산수학    : "수학의 여러 분야를 섞어놓은 듯한 과목으로서, 함수, equivalence class, 증명법 등 뿐만아니라 후반부에는 optimization theory에 대해서 배우고 관련된 알고리즘을 공부하기도 한다. 교수님에 따라 매트랩을 사용하여 프로그래밍을 해야 할 수도 있다.",
객체지향프로그래밍    :  "C++ 에 대해서 미리 배우고 나서 수강하더라도, 예를들어 열혈 C++프로그래밍 등의 교재를 열심히, 꼼꼼히 공부해야 시험을 잘 볼 수 있는 과목이다. 교수님에 따라 편차가 크며, 때로 프로젝트를 해야 하며 조모임을 통해 의도치 않게 자바스크립트, 타입스크립트, 안드로이드 등의 다른 언어를 강제로 학습하게 될 수 있다. 객체지향의 개념을 학생들에게 잘 심어주는 것이 과목의 목표이기 때문에 꼭 C++이라는 언어를 고수하는 것은 아니다. 언젠가는 Python 등의 언어를 사용하게 될 수 있다.",
//선택과목
집합론    :    "수학에서 많이 쓰이는 중요하지만 기초적인 내용에 대해서 배우다가, 학기 말에는 Zorn’s Lemma와 같이 고급 개념들 또한 학습하게 된다. 매주 진도 나간 내용과 관련하여 숙제가 생기고, 때로는 학생이 질문한 내용이 숙제가 되어버리기도 한다. 이 과목을 듣고 나면 집합이라는 대상에 대해 신기한 개념들을 학습하게 된다. 그러나 타과목과 관련하여서는  uncountable라는 개념이 있었다는 걸 아는 정도면 충분하다는 이야기도 있다.",
최적화개론    :  "배워야 할 내용이 적고 교수님께서 친절하게 같은 내용을 여러 번 설명해주시기 때문에, 보통 200명 내외의 수강생들이 수강하는 과목이다. 중간고사 이전까지는 LP에 대해서, 그 후로는 transformation, minimum spanning tree 등의 개념을 배우고 활용하는 법 또한 익힌다. 세세한 이론적인 부분보다는 기술적인 내용을 익히면 누구나 A+를 받을 수 있는 과목이다.",
고체역학I    : "일반물리I의 내용에서 조금 더 나아가 강체의 회전 등에 대해서 배우고, 어떤 물체가 왜 정지해있을 수 있는지를 배운다. 구조물이 안전하게 설계되려면 어떤 조건을 만족해야 하는지도 알 수 있다. 큰 이변이 없는 이상 아주 평이한 수준의 내용을 학습하면 충분하다.",
전자기학개론    : "일반물리II에서 배운 내용들을 다시 한번 배우고 조금 더 나아간다. 전자과 2학년 전공과목이라 타과 학생들이 많이 들으며, 내용도 어렵지 않지만 일반물리II도 어려워했던 학생이라면 듣지 않는 것이 좋을 수도 있다.",
게임이론    : "죄수의 딜레마게임으로 시작하여 경제학의 주요 갈래인 게임이론의 여러 개념들에 대해서 학습한다. 팀프로젝트가 있어서 의외로 힘들 수 있다.",
경제학원론    :  "'대학교에 왔으면 한번은 수강해봐야지'라고 생각하는 사람이 많고, 그만큼 기본적이고 중요한 경제학적 개념들에 대해서 배운다. 학기가 끝날 때쯤이면 경제학적인 사고를 할 수 있을 것이다.",
법률의세계    :  "이 과목을 듣고 나면 뉴스를 보는 관점이 달라진다. 법학이라는 것이 생각보다 우리 생활과 밀접한 관련이 있다는 것을 몸소 느낄 수 있는 기회가 될 수 있다.",
'20세기세계사'    :  "전쟁의 발발과 함께 냉전 등의 이슈로 혼란했던 20세기를 꿰뚫어볼 수 있는 시각을 기를 수 있다. 가끔 에세이 형식의 짧은 글을 써 내야 할 때가 있으며 기말고사만 있는 것이 메리트라고 할 수 있다. 평소에 성실하게 참고자료를 읽고 숙제를 하는 것이 학점과 관련이 클 수 있다. 조모임이 있지만 많이 힘든 정도는 아니며, 4차산업혁명과 관련해 조모임을 하게 될 수도 있다.",

//CSE 3학년1학기
//가이드라인과목
컴퓨터네트워크 :   "네트워크가 어떻게 구성되어있는지에 대해서 배우며, 교수님 은퇴로 정확한 양상을 예측할 수는 없지만 기존의 예로 보면 2인1조로 소켓 프로그래밍을 활용한 프로그램 개발 프로젝트가 있으며 학점은 정직하게 주시는 듯하다.",
컴퓨터구조    :  "학기 초에는 베릴로그라는 언어를 사용해서 CPU를 어떻게 설계하는지를 배우며, 후반이 되면 I/O system까지 내용이 확장되는 것을 경험할 수 있다. A는 거의 없고 대부분이 B대 학점을 받게 되며, 흥미는 있지만 로드가 많아 체력적으로 힘든 과목 중 하나이다.",
알고리즘    : "알고리즘을 배우고, 그 성능을 테스트하기 위해 코딩하는 과제가 주어지기도 한다. 중간고사, 기말고사는 필기시험이고 따로 실기 알고리즘 문제 풀이 시험이 있다. 높은 레벨에서 이론이 전개되기 때문에 비전공자가 들어도 제법 이해될 내용이 많다.",
프로그래밍언어    :  "교수님께서 명강의를 하신다는 소문이 있으며, 함수형 언어를 사용한다.",
//선택과목
'발표와토론'    :    "의사소통능력의 함양이 갈수록 중요해지는 현대사회의 변화에 발맞추어 학생들의 발표와 토론 기술을 향상시키는 데 목적을 둔 강의이다. 3분스피치와 프레젠테이션 등을 통하여 상황과 목적에 맞게 청중을 설득하는 발표 기술을 기르고, 패널토론을 통하여 학술적 쟁점이나 사회 문제에 대해 자신의 의견을 주장하고 상대방의 의견을 올바르게 청취ㆍ비판하는 법을 배운다.",
'논리와비판적사고'    :    "비판적이고 논리적인 근거를 들어 말하는 법을 가르치는 과목이다. 강의 80% 토론 20%비율로 수업이 진행되며 이례적으로 중간고사를 3번 본다.",

//PHYS 3학년2학기
//가이드라인과목
양자물리II    : "양자물리I에서 배운 기본 개념을 바탕으로 exact solution을 구할 수 없는 슈뢰딩거 방정식의 해를 perturbation theory, variation principle, WKB approximation 등을 이용하여 근사하는 방법을 배운다. 내용이 어려워 로드가 많게 느껴진다.",
물리계측실험    : "다양한 전자회로를 구성하고 LabVIEW라는 프로그램을 이용해 실험의 알고리즘을 직접 코딩하고, 얻은 데이터를 처리하는 방법을 배운다. 실험에 걸리는 시간이 상당히 길고 보고서를 교수님께서 직접 채점하기때문에 매우 엄격한 기준을 적용받는다. 실험수업이지만 수업도 있으며, 실험 전에 제출하는 lab assignment, 실험 중에 기록하는 Lab note도 작성해야 한다. 전자과의 디지털시스템설계를 들은 사람에게는 실험이 매우 쉽게 느껴져서 로드가 감소한다고 한다.",
열물리    :  "열역학과는 달리 역학에 대한 내용은 거의 배우지 않고, 80퍼센트 정도가 통계학적인 내용이다. macroscopic한 시점에서 계 전체의 에너지, 엔트로피, 부피, 압력, 온도 등을 다룬다. 통계학을 수강한 사람에게는 쉽게 느껴질 수 있지만, 그렇지 않은 경우에는 꽤 많은 로드가 느껴질 것이다.",
//선택과목
일본어초급    :    "기초적인 일본어 학습능력을 기르는 데 필요한 문자와 발음 및 기본 어휘와 문형, 문법 등을 익히게 하고, 나아가 기본적인 의사소통 및 독해능력을 길러주게 한다. 또한, 일본어 어학능력의 배양을 위해서, 다양한 예문을 통해 기초문법과 문형, 어휘를 숙지하고 활용할 수 있게 하여 기초적인 회화능력 향상을 도모하는 과목이다.",
'예술학특강:글로벌축제의이해'    :    " 이 강의의 목적은 프랑스를 중심으로 세계의 주요 축제를 이해하는 동시에 각 축제가 겨냥하는 전략을 살펴보는데 있다. 세계의 여러 축제들은 각 지역의 언어와 정체성을 극대화시킨 행사인 동시에 향후 세계문화의 재편을 바라보게 한다. 이 과정은 세계를 이해하는 가장 중요한 수단이자 각 지역, 각 국가가 추구하는 가치들을 알아내는 과정이기도 하다. ",

//IME 2학년2학기
//가이드라인과목
정보시스템기술    :    "산경과 과목이라고 말하기 무색할 정도로 엄청난 C++ 기반 progamming 과제들과 높은 난이도의 코딩 실력을 요구하는 과목이다. 산경과 네임드과목으로, C++을 활용한 assignment의 난이도가 상당하며, 진도도 굉장히 빨라서 객체지향 프로그래밍 전체에서 배우는 내용을 중간고사 이전에 커버한다. 학기 말에는 C++을 이용한 안드로이드 앱 개발에 관한 내용을 다루기도 한다.",
경영과학II    : "확률시스템에 대한 수학적 고찰과 그 원리인 마르코프체인 및 큐잉이론에 대한 내용이 메인이다. 수업자료가 따로 없는 것이 특징이며, 교수님께서 판서로 수업하시기 때문에 결석 시 수업내용을 따라갈 방법이 없다. 수학을 좋아하지 않는 학생들에게 힘들게 느껴질 수 있다.",
실험계획개론    :    "단순회귀 및 다중회귀 모형과 관련 추론을 다루며, 기본적인 실험계획 및 분석 기법을 다룬다. 일원배치법, 이원배치법, 요인배치법, 부분요인배치법, 블럭설계 등의 설계 및 이들에 대한 분산분석법을 배운다.",
비즈니스플래닝    :    "본 과목은 기술사업화나 창업을 위한 사업계획서 작성에 필요한 실무적인 지식과 관련 이론을 제공하여, 학생들이 실제 사업계획을 작성하는 것을 목표로 한다. 작성된 사업계획서에 대해, 전문 투자자들로부터 기술사업화와 창업의 성공 가능성에 대한 현실적인 평가와 Feedback을 받을 수 있는 기회를 제공하고자 한다. 학생들은 우리 대학 내에서 개발되고 있는 기술이나 제품에 대한 사업계획서를 작성한다(직접 추진하고자 하는 내용도 가능하다.). 이를 위해 본 과목에서는 사업계획서 작성에 필요한 실무적인 교육과 사업계획 평가 및 작성 과정에 도움을 줄 수 있는 다음과 같은 다양한 외부 인적 자원을 제공하고자 한다. 여기에는 사업계획서 작성 실무 교육, 기술 기획 및 사업기회 포착, venture financing, venture/technology marketing, 기업 임원, mentors 등이 포함된다.",
제품생산공정설계I  : "총 3번 수강해야하는 과목으로 한 학기 동안 하나의 프로젝트를 진행한다. 특정 제품(혹은 서비스 등)의 생산공정 깊게 조사하여 수업에 들어오시는 세 분의 교수님, 그리고 수강생들과 공유하는 것이 프로젝트의 목표이다. 난이도는 높지 않으며 조별 발표 시 동영상을 제작해야 한다.",
//선택과목
데이터구조    :    "컴퓨터 공학도들에게 필수적인 분야인 데이터 구조에 대해서 배운다. 데이터를 어떤 모델을 사용하여 정갈하고 효율적인 방식으로 정리하는 법을 익힌다. Algorithm analysis, lists, trees, priority queues, dictionary 등의 자료구조 개념을 학습한다",
경영학원론    :    "경영에서 다루는 다양한 분야의 이론과 방법론들을 포괄적으로 이해하고, 이를 통하여 기업 경영에 대한 이해를 증진한다. 경영의 이해, 조직과 인사관리, 수주-생산-구매-배송의 오퍼레이션, 마케팅, 재무회계, 전략 수립, 글로벌 경영 및 사회적 책임 등의 주제들을 다양한 자료들과 사례 연구 등을 통하여 학습한다. Course Project를 통하여 실제 기업의 경영에 대한 사례 분석도 수행한다.",
창업의실제    :    "실전창업을 위한 전단계 교육으로서 창업에 대한 인식 고취와 간접적인 체험을 통해 실천적 이해를 도모할 수 있는 과목이다. 교내외 경진대회로 이어지는 활동으로, 실질적인 창업확산에도 도움을 주는 것이 목표인 과목이다.",

//MSE 3학년 1학기
//가이드라인과목
고분자소재개론    :  "고분자 물성 등의 전반적인 고분자소재에 대한 내용을 배운다. 과제는 마치 POSTECH의 전공적합성 면접의 심화버전 느낌의 문제가 출제되면, 구글링을 통해서도 알 수 없는, 생각을 요하는 문제들이다. 특이사항으로는 group presentation으로 5개정도의 개념을 '몸으로 표현'해서 다른 조 사람들에게 맞추도록 하는 활동을 하게 된다.",
세라믹소재개론    :  "세라믹소재와 그 성질에 대해서 배운다. 과제의 난이도가 있는 대신 시험의 난이도는 평이한 편이다.",
소재물리    : "Phonon, Band Theory, Election movement 등 Electrical Device의 물리적 기반이 되는 내용들을 배운다. 강의 도중 어떤 내용에 대해 조사해오거나 직접 그래프를 그려보는 등의, 수업을 듣는 데에 도움이 되는 숙제들을 교수님께서 그때그때 내주신다. 시험이 어렵다.",
소재의기계적성질    : "소성 가공에서 소재가 보이는 기계적인 특성 등에 대해서 배운다. 개념설명을 위주로 시험이 출제된다. 학기 말이 되면 Abaqus라는 시뮬레이션 프로그램을 이용하여 FEM이 어떻게 사용되는지 익히는데, 주어진 문제 4개와 학생 재량의 문제에 대해서 모델링하고 해결하는 발표 프로젝트가 있다. 보고서도 작성하여야 하는데, 새로운 프로그램이지만 거의 독학하다싶이 해야 한다.",
신소재공학실험    :  "재료공학과 관련된, 금속, 반도체, 고분자, 세라믹 분야의 실험을 조교님들께서 진행하는 것을 '보고' 주어진 문제를 해결하는 방식의 Final Report를 작성해야 한다.",
//선택과목
회로이론    :    "전기회로를 해석하고 설계하기 위한 능력을 개발하는 것이 목표이다. 전하, 전류, 전압, 저항, 용량,인덕턴스, 전력, 에너지 개념, 키르히호프 법칙, 임피던스의 개념 등을 배우며, phasor의 방법과 Laplace Transform을 사용하므로 미분방정식을 이수한 후 수강하는 것이 좋다. 컴퓨터 프로그램을 이용한 회로 설계과제가 은근히 까다롭다.",
문화콘텐츠와스토리텔링    :    "매스 미디어를 통해 전달되는 문화콘텐츠의 특징과 효과, 삶의 다양한 영역에서 개발되는 스토리의 양상과 사회적 의미를 이해하고, 협력학습을 통해 수강생들 스스로 문화콘텐츠를 만들어봄으로써, 현대사회의 문화적 특징을 파악할 수 있도록 하는 것이 강의의 목표이다. 개인 보고서와 조별프로젝트가 있으며, 개인프로젝트는 자기소개 또는 미래지향적인 꿈과 포부에 대해서 다루는 것이 특징이다.",
일본어초급    :  "소위 일본어 덕후들이 많이 수강한다고 알려진 외국어 과목이다. 대부분의 학생들이 이미 일본어를 잘하는 상태로 들어오기 때문에 기본 없이 들으면 상대적인 박탈감을 느낄 수도 있다는 소문이 있다.",
현대예술의이해    :    "현대 예술의 흐름을 문화, 사회적인 관점으로 접근해서 분석하고 주요 작품의 작곡가와 작곡 기법을 배운다. 평소에 음악감상 또는 동영상 시청 과제 등이 있으며 기말 과제로 A4 10장 내외의 과제가 있다.",

//ME 2학년 2학기
//가이드라인과목
열역학    :  "아마도 가장 많은 학생들이 이 과목을 드랍할 것으로 예상된다. 수업 내용뿐만아니라 시험 문제도 너무나 어렵게 출제되며 학점 또한 잘 받기가 매우 어려워 학생들의 탄식이 쏟아져 나오는 과목이다.",
고체역학II    : "고체역학I에 비해 확연히 어려워진 내용에 놀랄 수 있으며, 이때문에 공부하기가 힘들 수 있다.",
기계재료학    :  "사실 기계공학보다 화학에 더 가깝운 내용을 다룬다. 기계과 학생들도 일반화학을 열심히 들어놓아야 할 이유가 있다는 것을 느끼게 해 주는 과목이다.",
동역학    :  "정말 기계과스러운 과목이다. 과제도 많고 내용의 난이도 또한 상당하다. 일반물리 1을 완벽하게 이해하고 잘할 수 있는 학생에게 그렇게 어려운 난이도는 아니기는 하다.",
기계공학개론I    : "타과의 입문 과목과 유사하다. 기계과 교수님들께서 돌아가시면서 본인의 연구 내용에 대해서 설명해주시며, 이에 대해 보고서를 작성해야 한다. 에그드랍대회가 매년 열리는 전통을 가지고 있으며 1등에게는 10만원부터 3등에게는 3만원의 상금이 주어지는 아기자기한 매력이 있는 과목이다.",
//선택과목
응용복소함수론    :  "복소평면에서 일어나는 다양한 일들에 대해서 배운다. 단순한 multi-variable함수와는 차별화된 연산구조때문에 발생하게 되는 여러가지 신기하고 재미있는 복소함수의 성질에 대해서 배운다. 이 과목을 수강하다 보면 살아숨쉬는 Euler의 숨결을 느낄 수 있으며, 다양하고 쓸모있어보이는 보존법칙을 덕분에 타과에서 많이 활용되는 과목이다. 여러가지 주제에 대해서 빠르게 배우기는 하지만 각 개념들간의 연관성또한 생각해볼 법한 흥미로운 과목이다. 복소함수의 매력을 느껴보자.",
음악의이해    :    "주로 클래식이라 불리는 서양음악을 중심으로 고대부터 낭만주의까지 음악의 큰 흐름을 소개하고, 매 강의별로 각 시대의 대표작들을 감상하는 과목이다. 때때로 시청하고 와야 하는 다큐멘터리같은 과제가 있으며 기말고사에는 감상시험, 즉 나오는 음악을 듣고 어떤 작곡가의 무슨 곡이며 어떤 작품인지 써야 하는 시험이 있다. 한울림 동아리 학우들은 눈감고도 떠올리는 음악들이라는 이야기가 있다.",
영화의이해    :    "영화를 통해 서구문화를 심층적으로 이해하도록 만드는 동시에, 세계를 편견 없이 바라보는 눈을 확보하는 것이 강의의 주목적이다.  영화를 통해 각 사회와 문화에 대한 이해를 도모하고자 하는 과목이다. 매학기 조금씩 달라지는 영화 선정 기준은 그때그때의 국제적 이슈를 반영하는 경우가 많다.",

//CHEM 2학년 1학기
//가이드라인과목
화학수학    : "화학에서 사용되는 여러 수학적 개념들에 대해 학습하게 된다. 도무지 알 수 없는 dihedral group등에 대해서 배우지만 사실 이 과목 만으로 해당 내용을 깊게 이해하기란 쉽지 않다. 어떤 개념이 존재한다는 정도만의 인상을 남기는 경우가 많다.",
'유기화학I(화학)'    : "본격적인 화학 반응을 배우기 전에 기본적인 반응 메커니즘과 configuration등에 대해 배운다.",
화학분석    : "실험오류, 평형 상태 분석, 전기화학, 기기분석 등 물질 분석의 이론을 배우며, 화학 이외의 다른 관련 분야에 대해서 다루기도 한다.",
분석화학실험    : "화학분석 수업을 바탕으로 배운 내용을 실습하는 실험 수업이다. 수기로 작성하는 10페이지 내외 분량의 보고서 작성이 요구되며, 실험이 오래 진행되어 수강생들과 조교님이 함께 치킨을 시켜 먹고 실험을 다시 재개하는 일도 흔히 발생한다.",
//선택과목
현대물리    :    "Relativity, Quantum mechanics, Atomic, Solid state physics 등 현대물리의 기본 개념을 다룬다.",
지적재산권의이해    : "저작권법, 디자인보호법, 상표법, 특허법 등에 대해서 배우고, 교재인 '지적재산권법'을 읽는 것이 주된 공부이다. 중간고사는 두번, 모두 단답형이며 교수님 설명을 들으면 교재를 읽기가 어렵지는 않고, 수업을 집중해 들으면 재미있다.",

//LIFE 2학년 1학기
//가이드라인과목
생명과학의원리    :  "생명현상을 이해하는데 필요한 분자생물학과 세포생물학의 기초를 배운다. 수업은 토론방식으로 진행되고 평가되며, 모두가 매번 영어 ppt를 만들어서 제출하고 발표 하루전 발표자를 선정한다. 발표자는 영어로 발표해야 한다.",
원리론    :  "현대생물학의 기본원리를 탐구하는 자세를 배우고 기초 실험법에 대해 배운다. 번번히 재실험해야 하는 불상사가 생긴다. 2학년 1학기가 힘들어지는 주된 이유가 되는 과목이라 학우들의  항의가 많았고, 그런 의견이 반영되어 주임교수님께서 로드를 줄여주신다는 소문도 있다.",
생태학및야외실습    : "생태계, 동식물의 군집, 개체군 등에 대해 배운다. 야외 실습이 이루어지며, 구룡포를 가기도 하고 산에 가기도 하고 학교를 돌아다니기도 한다. 수강 인원이 적고 경험을 많이 하게 해주시려는 교수님들 덕에 재밌게 느껴질때가 많은 과목이다. 산, 식물원 등을 방문하며 '방형구'처럼 책에서 보던 조사방법을 실제로 해볼 수도 있었다.(RC 뒷산, 청암 부근 풀밭, 폭풍의 언덕) 교수님, 조교님들과 친해질 수 있는 계기가 되는 과목이다.",
//선택과목
스페인어초급    :    "스페인어 입문자들을 위한 강좌로 초급 스페인어 수준의 과정으로, 페인어 문법, 회화, 독해, 작문 위주로 스페인어 문장 체계를 이해하고 간단한 회화가 가능하며 일간지의 쉬운 기사를 읽고 이해하는 것을 목표로 한다.",

//CE  2학년1학기
//가이드라인과목
'화공물리화학I'    : "화학적 열역학을 배우는 과목이다. 평형과 관련된 기체적 성질, 입자운동 및 화학반응속도론 등에 대해 배운다. 과제가 매우 많다는 소문이 있다.",
'유기화학I(화공)'    :	"유기화합물의 구조 및 반응, 구조 결정방법 및 합성에 대하여 배운다. 시험을 3번 보는 것이 특징이며, 암기 위주의 공부가 요구된다. 화학과 유기화학과 동일하게 인정되는 과목이기 때문에",
화학생명공학    : "생화학, 분자생물학의 기초지식을 공부하고 분자생명공학의 기본적 원리와 기법 등에 대해서 배운다. 매주 퀴즈가 있으며, 생명과학과 친구들이 판치는(?) 것을 볼 수 있다.",
화학생명공학실험    :"화학생명공학에서 배운 내용을 실습하는 과목이며, 프리랩, 인랩, 파이널랩 도합 10페이지 분량의 보고서를 작성해야 한다. 프리랩 퀴즈도 있으며, 파트너와 협동하고 친해지게 되는 계기가 된다.",
//선택과목
'학제간통합교양교육특강:현대문명과환경의이해'    : "여러 교수님들꼐서 돌아가시면서 강연처럼 수업하시는 과목이다. 들은 내용에 대해서 보고서를 쓰거나 참고도서를 읽고 독후감을 써내야 하는 등의 과제가  있다.",
서양문화사    :  "교수님께서 영어로 강의를 하시지만 정통 영국식의 영어를 유창하게 구사하시기 때문에 큰 문제는 없다. 중간 에세이는 바텀이 30점 만점에 20점이어서 점수가 후한 편이다. 과목 내용은 너무 방대해서 어떻게 공부해야 할지 막막하기는 하다. 수업을 열심히 들으면 다양한 재미있는 에피소드를 들을 수 있다.",
잠의심리학    :    "잠(수면)에 대한 심리학적, 뇌과학적 연구를 살펴보는 과목이다. 잠이란 어떤 상태이며, 자고 깨는 리듬은 어떻게 나타나는지, 잠은 어떤 기능을 가지고 있는지, 그리고 24시간 움직이는 현대사회에서 대부분의 사람들이 겪는 수면부족과 불규칙한 수면이 인지적, 감정적, 생리적으로 어떤 영향을 미치는지 고찰한다. 또한, 꿈의 상태 및 기능에 관한 연구들을 살펴보고, 다양한 수면 장애들과 이에 대한 치료들은 무엇인지, 그리고 수면 및 꿈과 학습/기억, 정서, 행복, 그리고 심리적 장애와는 어떤 관계가 있는지 등을 살펴본다. 팀프로젝트가 많고, 써내야 하는 보고서도 많으며, 때로 어떤 학생들은 수업 시간에 실습(수면)을 한다는 우스개소리도 있다.",
독서토의    :    "선정된 도서를 한 학기 동안 정독하고 논제에 따라 토의를 수행함으로써 이공계 대학생들이 지녀야 할 지적인 사고와 종합적 판단능력을 함양하는 데 목적을 두는 강의이다. 이 강의를 이수함으로써 주체적인 독서 습관과 합리적인 사고력을 지닌 지성인으로서 사유하는 방법을 익히게 된다. 수업 시간에 다룰 도서는 보통 현 사회의 이슈와 보편적 교양의 지표를 나타낼 수 있는 것으로 선택되고, 토의 주제는 학생들이 비판적 인식과 다층적 시각을 형성하는 데 도움을 줄 수 있는 것으로 선정된다.",

//CITE  2학년2학기
//가이드라인과목
'생명감성&트랜스휴먼스튜디오'	:	"스튜디오 과목인만큼 중간고사와 기말고사가 없고 조모임에 많은 비중이 있는 과목이다. 학생들에게 인기가 많은 과목이라 수강신청이 생각보다 힘든 과목이다. 시간표 상 수업은 두번이지만 ",
'창의IT설계II:기초설계' :"‘창의IT설계I: 기초이론 및 설계’에서 툴교육을 통해 컴퓨터공학, 전기전자공학, 기계공학의 전반적인 기초를 배웠다. ‘창의IT설계II:기초설계는 이를 기반으로 본인의 관심주제에 대해 심도있는 연구를 진행한다. 창공과의 상징적인 과목으로, 6학점의 무거운 로드를 갖는다. 하고 싶은 분야가 있다면 즐거운 과목이지만, 그렇지 않다면...",
인터렉션디자인스튜디오    : 	"스튜디오 과목답게 시험이나 퀴즈가 없고, 평상시 과제로는 매주 사진 업로드하기, 사전 읽기 과제, 토론활동 등으로 어렵지 않으나 비중 놓은 조별과제가 있다.",
융합적상상력과공학력디자인    :    "중간고사가 없고, 개인/조별 발표와 개인 포트폴리오가 큰 비중을 차지한다. 다학제간 인문사회예술학적 지식을 통해 신선한 상상력을 훈련하고 그것을 공학적 지식과 융합해보는 것이 이 과목의 목적이다. 구체적인 과제 제시와 발표가 요구된다.",
창의적기업가정신응용	:	"1학기에 열리는 비즈니스모델스튜디오 과목과 동일한 내용을 배우는 과목이다. 중간고사, 기말고사가 없으며 대신 조모임이 큰 비중을 차지한다.",
//선택과목
'법학특강:법과인권'    :    "현대사회의 법과 인권 관련 다양한 주제들을 학습하면서 인간의 존엄성과 인권의식을 배양하는 것이 목표인 과목이다. 특별한 사전지식을 요구하지 않으며, 주변에서 찾을 수 있는 인권과 관련한 주제를 탐색하고 발표 및 토론을 진행하는 수업이다. 인권법이라는 교재를 사용하며, 교수님 설명과 함꼐 읽으면 어렵지 않다.",
미술과기업가들 : "로드가 많으니 각오를 하고 들어야 한다. 그러나 수업 이전에 영상을 시청하고 올 수 있도록 교수님께서 자연스럽게 유도해주시며, 수업이 재밌고 흥미롭다. 조모임을 비롯해 발표, 미술관 견학, 읽기자료 읽고 보고서 쓰기 등의 로드가 많지만 활동 하나하나가 하는 의미가 있다는 느낌을 받을 수 있고, 이 과목을 통해 배워가는 것이 많다. 작품을 보는 관점이 달라지고 예술에 대해서 여러가지 생각을 해볼 수 있도록 교수님께서 유도를 해주신다.",
세포생물학    :    "Cell biology의 기본적인 원칙, 방법론 등을 배운다. 고등학교의 생명과학 2의 세포 내 작용과 관련된 부분의 아주 심화버전이라고 생각하면 된다. 책이 정말정말 두껍다.",

//EE 2학년2학기
//가이드라인과목
반도체전자공학I    :    "반도체, PN접합, 트랜지스터의 물리적 작동원리 등에 대하여 배운다. 규소(Si)의 Crystal Structure, Equilibrium state 등의 이론을 배운다. 즉 규소에 도핑을 하는 등의 변화를 가했을 때 반도체가 어떻게 작동하는지를 배울 수 있다. 전자과스러운 과목이다.",
디지털시스템설계    : "디지털 시스템을 분석하고 설계하는 방법에 대해 배운다. 때로는 DBL로 엘리베이터 회로 설계와 같은 당황스러운 과제가 주어지기도 해 수강생을 고통에 빠뜨리는 과목이다.",
신호및시스템    : "다양한 신호 수신과 그 관계에 대해서 배우지만 주로 주파수에 대해 공부한다. 수강 학기 이전에 미분방적식을 필수로 수강해야 한다.",
데이터구조    :  "Stack, List와 같은 여러가지 자료 구조에 대해서 배우며, programming assignment가 주어진다.",
//선택과목
미술의이해    :    "수업이 영어로 진행되며 퀴즈나 시험에서도 수업시간에 다룬 내용에 대해 물어보는 문제가 많이 나와서 수업시간에 집중을 잘 해야한다.  미술의 역사와 문화에 대해 많이 배울 수 있고, 수강생들이 과제에 올린 사진들 중 몇개를 선택, 가상의 전시회 ppt를 구성해보는 독특한 과제가 있다.",
음악의이해    :  "고전주의부터 낭만주의까지의 음악의 역사에 대한 내용과, 음악의 본질과 여러 중요한 요소들에 대해서 배운다. 중간고사, 기말고사 때는 암기 위주의 공부를 해야 하며, 기말고사때는 특별히 듣기 시험을 치기 때문에 클래식 음악을 암기할 수도 있다는 점을 깨닫게 된다. 고등학교 음악 감상시험이 생각나는 대목이기도 하다. 교수님꼐서 음악의 여러 개념들과 역사에 대해 말로 풀어 차근차근 설명해주시기 때문에 편하게 들을 수 있는 과목이다."
}

var back_temp = new PIXI.Graphics();
back_temp.lineStyle(2, 0x0000FF, 0);
back_temp.beginFill(0xE5E4E0, 1);
back_temp.drawRect(-app_simulator.renderer.width/2, -app_simulator.renderer.height/2,
                  app_simulator.renderer.width, app_simulator.renderer.height);
app_simulator.stage.addChild(back_temp);

var default_style = new PIXI.TextStyle({
  fontFamily: 'Consolas',
  fontSize: 40,
  fill: ['#000000', '#000000'], // gradient
  stroke: '#4a1850',
  strokeThickness: 1,
  dropShadow: false,
  dropShadowColor: '#000000',
  dropShadowBlur: 1,
  dropShadowAngle: Math.PI / 6,
  dropShadowDistance: 6,
  wordWrap: true,
  wordWrapWidth: 700
});

// MAIN MENU
mainmenu = new PIXI.Sprite.fromImage('images/menu.png');
mainmenu.anchor.set(0.5);
mainmenu.x = 0;
mainmenu.y = 0;

button_new_game = new PIXI.Graphics();
button_achievement = new PIXI.Graphics(); ////////
button_new_game.beginFill(0xFFFFFF, 1);
button_new_game.drawRect(app_simulator.renderer.width*(-0.35), app_simulator.renderer.height*0.28,
                     app_simulator.renderer.width*0.126, app_simulator.renderer.height*0.074);
button_new_game.buttonMode = true;
button_new_game.interactive = true;
button_new_game.alpha = 0;
button_new_game
    .on('pointerdown', new_game_onButtonDown);

function new_game_onButtonDown(){
    for (let i = 0; i < Department_choice_button.length; i++){
        app_simulator.stage.addChild(Department_choice_button[i]._department_button);
        app_simulator.stage.addChild(Department_choice_button[i]._select_button);
        app_simulator.stage.addChild(Department_choice_button[i]._return_button);
    }

    app_simulator.stage.removeChild(mainmenu);
    app_simulator.stage.removeChild(button_new_game);

    loading_menu_to_test();
}


function enable_main_menu(){
    app_simulator.stage.addChild(mainmenu);
    app_simulator.stage.addChild(button_new_game);
}


enable_main_menu();


// CHARACTER TEST
class Character_test {
    constructor(question,
                 answer,
                 selected_num_available,
                 list
                ){

        let _thisclass = this;
        this._question = question;
        this._answer = answer;
        this._selected_num_available = selected_num_available;
        this._list = list;

        //////////////////////////////////////////////////////////
        this._question_center = new PIXI.Graphics();
        this._num_of_answers = this._answer.length;
        this._selected_num = 0;
        this._selected = [0, 0, 0, 0, 0, 0];
        this._i = 0;

        this._rand_depart = Math.floor(Math.random()*10);
        this._question_center.beginFill(0xDDDDDD);
        this._question_center.lineStyle(10, 0x000000, 0.5);
        this._random_angle = Math.random()*2*Math.PI;
        this._question_center.drawRect(-700, -400, 1400, 500);

        this._question_text = new PIXI.Text(this._question, {
            fontFamily: 'Consolas',
            fontSize: 90,
            fill: 0x000000,
            stroke: 0xFFFFFF,
            strokeThickness: 8,
            dropShadow: false,
            dropShadowColor: '#DDDDDD',
            dropShadowBlur: 1,
            dropShadowAngle: Math.PI / 6,
            dropShadowDistance: 6,
            wordWrap: false
        });

        this._question_text.anchor.set(0.5);
        this._question_text.x = 0;
        this._question_text.y = -150;

        //////////////////////////////////////////////////////////

        //this._answer_buttons = [];

        this._temp_index = 0;

        if (this._num_of_answers > 0){
            this._answer_buttons_0 = new PIXI.Graphics();
            //this._answer_buttons.push(new PIXI.Graphics());
            this._answer_buttons_0.beginFill(color_Template[Department[this._rand_depart]][0]);
            this._answer_buttons_0.lineStyle(20, color_Template[Department[this._rand_depart]][0], 0.7);
            this._answer_buttons_0.drawRect(-690, 190, 380, 240);

            this._answer_buttons_0.buttonMode = true;
            this._answer_buttons_0.interactive = true;
            this._answer_buttons_0.alpha = 0.4;


            this._answer_text_0 = new PIXI.Text(this._answer[0][0], {
                fontFamily: 'Consolas',
                fontSize: 60,
                fill: 0xFFFFFF,
                stroke: 0x000000,
                strokeThickness: 8,
                dropShadow: false,
                dropShadowColor: '#DDDDDD',
                dropShadowBlur: 1,
                dropShadowAngle: Math.PI / 6,
                dropShadowDistance: 6,
                wordWrap: false
            });

            this._answer_text_0.anchor.set(0.5);
            this._answer_text_0.x = -500;
            this._answer_text_0.y = 310;


            this._answer_buttons_0
                .on('pointerdown', answer_onButtonDown_0)
                .on('pointerup', answer_onButtonUp_0)
                .on('pointerupoutside', answer_onButtonUp_0)
                .on('pointerover', answer_onButtonOver_0)
                .on('pointerout', answer_onButtonOut_0);

            function answer_onButtonDown_0(){
                console.log(0);
                this.isdown = true;
                if (_thisclass._selected[0] == 0){
                    _thisclass._selected[0] = 1;
                    _thisclass._answer_buttons_0.alpha = 0.8;
                    if(_thisclass._answer[0][1] == 'grade'){
                        thisGame.status.grade += _thisclass._answer[0][2];
                        thisGame.status.relationship += (Math.random()-0.5)*0.01;
                        thisGame.status.health += (Math.random()-0.5)*0.01;
                    } else if(_thisclass._answer[0][1] == 'relationship'){
                        thisGame.status.grade += (Math.random()-0.5)*0.01;
                        thisGame.status.relationship += _thisclass._answer[0][2];
                        thisGame.status.health += (Math.random()-0.5)*0.01;
                    } else if(_thisclass._answer[0][1] == 'health'){
                        thisGame.status.grade += (Math.random()-0.5)*0.01;
                        thisGame.status.relationship += (Math.random()-0.5)*0.01;
                        thisGame.status.health += _thisclass._answer[0][2];
                    } else {
                        thisGame.status.grade += (Math.random()-0.5)*0.04;
                        thisGame.status.relationship += (Math.random()-0.5)*0.04;
                        thisGame.status.health += (Math.random()-0.5)*0.04;
                    }
                    console.log(thisGame.status.health);
                    console.log(thisGame.status.relationship);
                    console.log(thisGame.status.grade);
                    _thisclass._selected_num = _thisclass._selected_num + 1;
                }
                if (_thisclass._selected_num == _thisclass._selected_num_available){
                    character_test_run();
                    _thisclass.hide_this();
                }
            }
            function answer_onButtonUp_0(){
                if (this.isOver){
                } else {
                }
            }
            function answer_onButtonOver_0(){
                this.isOver = true;
                if (this.isdown){
                    return;
                }
            }
            function answer_onButtonOut_0(){
                this.isOver = false;
                if (this.isdown){
                    return;
                }
            }
        }

        if (this._num_of_answers > 1){
            this._answer_buttons_1 = new PIXI.Graphics();
            //this._answer_buttons.push(new PIXI.Graphics());
            this._answer_buttons_1.beginFill(color_Template[Department[this._rand_depart]][1]);
            this._answer_buttons_1.lineStyle(20, color_Template[Department[this._rand_depart]][1], 0.7);
            this._answer_buttons_1.drawRect(-190, 190, 380, 240);

            this._answer_buttons_1.buttonMode = true;
            this._answer_buttons_1.interactive = true;
            this._answer_buttons_1.alpha = 0.4;

            this._answer_text_1 = new PIXI.Text(this._answer[1][0], {
                fontFamily: 'Consolas',
                fontSize: 60,
                fill: 0xFFFFFF,
                stroke: 0x000000,
                strokeThickness: 8,
                dropShadow: false,
                dropShadowColor: '#DDDDDD',
                dropShadowBlur: 1,
                dropShadowAngle: Math.PI / 6,
                dropShadowDistance: 6,
                wordWrap: false
            });

            this._answer_text_1.anchor.set(0.5);
            this._answer_text_1.x = 0;
            this._answer_text_1.y = 310;


            this._answer_buttons_1
                .on('pointerdown', answer_onButtonDown_1)
                .on('pointerup', answer_onButtonUp_1)
                .on('pointerupoutside', answer_onButtonUp_1)
                .on('pointerover', answer_onButtonOver_1)
                .on('pointerout', answer_onButtonOut_1);

            function answer_onButtonDown_1(){
                this.isdown = true;
                if (_thisclass._selected[1] == 0){
                    _thisclass._selected[1] = 1;
                    _thisclass._answer_buttons_1.alpha = 0.8;
                    if(_thisclass._answer[1][1] == 'grade'){
                        thisGame.status.grade += _thisclass._answer[1][2];
                        thisGame.status.relationship += (Math.random()-0.5)*0.01;
                        thisGame.status.health += (Math.random()-0.5)*0.01;
                    } else if(_thisclass._answer[1][1] == 'relationship'){
                        thisGame.status.grade += (Math.random()-0.5)*0.01;
                        thisGame.status.relationship += _thisclass._answer[1][2];
                        thisGame.status.health += (Math.random()-0.5)*0.01;
                    } else if(_thisclass._answer[1][1] == 'health'){
                        thisGame.status.grade += (Math.random()-0.5)*0.01;
                        thisGame.status.relationship += (Math.random()-0.5)*0.01;
                        thisGame.status.health += _thisclass._answer[1][2];
                    } else {
                        thisGame.status.grade += (Math.random()-0.5)*0.04;
                        thisGame.status.relationship += (Math.random()-0.5)*0.04;
                        thisGame.status.health += (Math.random()-0.5)*0.04;
                    }
                    console.log(thisGame.status.health);
                    console.log(thisGame.status.relationship);
                    console.log(thisGame.status.grade);
                    _thisclass._selected_num = _thisclass._selected_num + 1;
                }
                if (_thisclass._selected_num == _thisclass._selected_num_available){
                    character_test_run();
                    _thisclass.hide_this();
                }
            }
            function answer_onButtonUp_1(){
                if (this.isOver){
                } else {
                }
            }
            function answer_onButtonOver_1(){
                this.isOver = true;
                if (this.isdown){
                    return;
                }
            }
            function answer_onButtonOut_1(){
                this.isOver = false;
                if (this.isdown){
                    return;
                }
            }
        }

        if (this._num_of_answers > 2){
            this._answer_buttons_2 = new PIXI.Graphics();
            //this._answer_buttons.push(new PIXI.Graphics());
            this._answer_buttons_2.beginFill(color_Template[Department[this._rand_depart]][2]);
            this._answer_buttons_2.lineStyle(20, color_Template[Department[this._rand_depart]][2], 0.7);
            this._answer_buttons_2.drawRect(290, 190, 380, 240);

            this._answer_buttons_2.buttonMode = true;
            this._answer_buttons_2.interactive = true;
            this._answer_buttons_2.alpha = 0.4;

            console.log(this._answer[2][0]);
            this._answer_text_2 = new PIXI.Text(this._answer[2][0], {
                fontFamily: 'Consolas',
                fontSize: 60,
                fill: 0xFFFFFF,
                stroke: 0x000000,
                strokeThickness: 8,
                dropShadow: false,
                dropShadowColor: '#DDDDDD',
                dropShadowBlur: 1,
                dropShadowAngle: Math.PI / 6,
                dropShadowDistance: 6,
                wordWrap: false
            });

            this._answer_text_2.anchor.set(0.5);
            this._answer_text_2.x = 480;
            this._answer_text_2.y = 310;


            this._answer_buttons_2
                .on('pointerdown', answer_onButtonDown_2)
                .on('pointerup', answer_onButtonUp_2)
                .on('pointerupoutside', answer_onButtonUp_2)
                .on('pointerover', answer_onButtonOver_2)
                .on('pointerout', answer_onButtonOut_2);

            function answer_onButtonDown_2(){
                this.isdown = true;
                if (_thisclass._selected[2] == 0){
                    _thisclass._selected[2] = 1;
                    _thisclass._answer_buttons_2.alpha = 0.8;
                    if(_thisclass._answer[2][1] == 'grade'){
                        thisGame.status.grade += _thisclass._answer[2][2];
                        thisGame.status.relationship += (Math.random()-0.5)*0.01;
                        thisGame.status.health += (Math.random()-0.5)*0.01;
                    } else if(_thisclass._answer[2][1] == 'relationship'){
                        thisGame.status.grade += (Math.random()-0.5)*0.01;
                        thisGame.status.relationship += _thisclass._answer[2][2];
                        thisGame.status.health += (Math.random()-0.5)*0.01;
                    } else if(_thisclass._answer[2][1] == 'health'){
                        thisGame.status.grade += (Math.random()-0.5)*0.01;
                        thisGame.status.relationship += (Math.random()-0.5)*0.01;
                        thisGame.status.health += _thisclass._answer[2][2];
                    } else {
                        thisGame.status.grade += (Math.random()-0.5)*0.04;
                        thisGame.status.relationship += (Math.random()-0.5)*0.04;
                        thisGame.status.health += (Math.random()-0.5)*0.04;
                    }
                    console.log(thisGame.status.health);
                    console.log(thisGame.status.relationship);
                    console.log(thisGame.status.grade);
                    _thisclass._selected_num = _thisclass._selected_num + 1;
                }
                if (_thisclass._selected_num == _thisclass._selected_num_available){
                    character_test_run();
                   _thisclass.hide_this();
                }
            }
            function answer_onButtonUp_2(){
                if (this.isOver){
                } else {
                }
            }
            function answer_onButtonOver_2(){
                this.isOver = true;
                if (this.isdown){
                    return;
                }
            }
            function answer_onButtonOut_2(){
                this.isOver = false;
                if (this.isdown){
                    return;
                }
            }
        }

        if (this._num_of_answers > 3){
            this._answer_buttons_3 = new PIXI.Graphics();
            //this._answer_buttons.push(new PIXI.Graphics());
            this._answer_buttons_3.beginFill(color_Template[Department[this._rand_depart]][3]);
            this._answer_buttons_3.drawRect(700, 200, 200, 100);

            this._answer_buttons_3.buttonMode = true;
            this._answer_buttons_3.interactive = true;
            this._answer_buttons_3.alpha = 0.6;


            this._answer_buttons_3
                .on('pointerdown', answer_onButtonDown_3)
                .on('pointerup', answer_onButtonUp_3)
                .on('pointerupoutside', answer_onButtonUp_3)
                .on('pointerover', answer_onButtonOver_3)
                .on('pointerout', answer_onButtonOut_3);

            function answer_onButtonDown_3(){
                this.isdown = true;
                if (_thisclass._selected[3] == 0){
                    _thisclass._selected[3] = 1;
                    _thisclass._answer_buttons_3.alpha = 1;
                    if(_thisclass._answer[3][1] == 'grade'){
                        thisGame.status.grade += _thisclass._answer[3][2];
                        thisGame.status.relationship += (Math.random()-0.5)*2;
                        thisGame.status.health += (Math.random()-0.5)*2;
                    } else if(_thisclass._answer[3][1] == 'relationship'){
                        thisGame.status.grade += (Math.random()-0.5)*2;
                        thisGame.status.relationship += _thisclass._answer[3][2];
                        thisGame.status.health += (Math.random()-0.5)*2;
                    } else if(_thisclass._answer[3][1] == 'health'){
                        thisGame.status.grade += (Math.random()-0.5)*2;
                        thisGame.status.relationship += (Math.random()-0.5)*2;
                        thisGame.status.health += _thisclass._answer[3][2];
                    } else {
                        thisGame.status.grade += (Math.random()-0.5)*4;
                        thisGame.status.relationship += (Math.random()-0.5)*4;
                        thisGame.status.health += (Math.random()-0.5)*4;
                    }
                    console.log(thisGame.status.health);
                    console.log(thisGame.status.relationship);
                    console.log(thisGame.status.grade);
                    _thisclass._selected_num = _thisclass._selected_num + 1;
                }
                if (_thisclass._selected_num == _thisclass._selected_num_available){
                    character_test_run();
                    _thisclass.hide_this();
                }
            }
            function answer_onButtonUp_3(){
                if (this.isOver){
                } else {
                }
            }
            function answer_onButtonOver_3(){
                this.isOver = true;
                if (this.isdown){
                    return;
                }
            }
            function answer_onButtonOut_3(){
                this.isOver = false;
                if (this.isdown){
                    return;
                }
            }
        }

        if (this._num_of_answers > 4){
            this._answer_buttons_4 = new PIXI.Graphics();
            //this._answer_buttons.push(new PIXI.Graphics());
            this._answer_buttons_4.beginFill(color_Template[Department[this._rand_depart]][4]);
            this._answer_buttons_4.drawRect(300, 200, 200, 100);
            this._answer_buttons_4.buttonMode = true;
            this._answer_buttons_4.interactive = true;
            this._answer_buttons_4.alpha = 0.6;


            this._answer_buttons_4
                .on('pointerdown', answer_onButtonDown_4)
                .on('pointerup', answer_onButtonUp_4)
                .on('pointerupoutside', answer_onButtonUp_4)
                .on('pointerover', answer_onButtonOver_4)
                .on('pointerout', answer_onButtonOut_4);

            function answer_onButtonDown_4(){
                this.isdown = true;
                if (_thisclass._selected[4] == 0){
                    _thisclass._selected[4] = 1;
                    _thisclass._answer_buttons_4.alpha = 1;
                    if(_thisclass._answer[4][1] == 'grade'){
                        thisGame.status.grade += _thisclass._answer[4][2];
                        thisGame.status.relationship += (Math.random()-0.5)*2;
                        thisGame.status.health += (Math.random()-0.5)*2;
                    } else if(_thisclass._answer[4][1] == 'relationship'){
                        thisGame.status.grade += (Math.random()-0.5)*2;
                        thisGame.status.relationship += _thisclass._answer[4][2];
                        thisGame.status.health += (Math.random()-0.5)*2;
                    } else if(_thisclass._answer[4][1] == 'health'){
                        thisGame.status.grade += (Math.random()-0.5)*2;
                        thisGame.status.relationship += (Math.random()-0.5)*2;
                        thisGame.status.health += _thisclass._answer[4][2];
                    } else {
                        thisGame.status.grade += (Math.random()-0.5)*4;
                        thisGame.status.relationship += (Math.random()-0.5)*4;
                        thisGame.status.health += (Math.random()-0.5)*4;
                    }
                    console.log(thisGame.status.health);
                    console.log(thisGame.status.relationship);
                    console.log(thisGame.status.grade);
                    _thisclass._selected_num = _thisclass._selected_num + 1;
                }
                if (_thisclass._selected_num == _thisclass._selected_num_available){
                    character_test_run();
                    _thisclass.hide_this();
                }
            }
            function answer_onButtonUp_4(){
                if (this.isOver){
                } else {
                }
            }
            function answer_onButtonOver_4(){
                this.isOver = true;
                if (this.isdown){
                    return;
                }
            }
            function answer_onButtonOut_4(){
                this.isOver = false;
                if (this.isdown){
                    return;
                }
            }
        }

        if (this._num_of_answers > 5){
            this._answer_buttons_5 = new PIXI.Graphics();
            //this._answer_buttons.push(new PIXI.Graphics());
            this._answer_buttons_5.beginFill(color_Template[Department[this._rand_depart]][5]);
            this._answer_buttons_5.drawRect(500, 200, 200, 100);
            this._answer_buttons_5.buttonMode = true;
            this._answer_buttons_5.interactive = true;
            this._answer_buttons_5.alpha = 0.6;


            this._answer_buttons_5
                .on('pointerdown', answer_onButtonDown_5)
                .on('pointerup', answer_onButtonUp_5)
                .on('pointerupoutside', answer_onButtonUp_5)
                .on('pointerover', answer_onButtonOver_5)
                .on('pointerout', answer_onButtonOut_5);

            function answer_onButtonDown_5(){
                this.isdown = true;
                if (_thisclass._selected[5] == 0){
                    _thisclass._selected[5] = 1;
                    _thisclass._answer_buttons_5.alpha = 1;
                    if(_thisclass._answer[5][1] == 'grade'){
                        thisGame.status.grade += _thisclass._answer[5][2];
                        thisGame.status.relationship += (Math.random()-0.5)*2;
                        thisGame.status.health += (Math.random()-0.5)*2;
                    } else if(_thisclass._answer[5][1] == 'relationship'){
                        thisGame.status.grade += (Math.random()-0.5)*2;
                        thisGame.status.relationship += _thisclass._answer[5][2];
                        thisGame.status.health += (Math.random()-0.5)*2;
                    } else if(_thisclass._answer[5][1] == 'health'){
                        thisGame.status.grade += (Math.random()-0.5)*2;
                        thisGame.status.relationship += (Math.random()-0.5)*2;
                        thisGame.status.health += _thisclass._answer[5][2];
                    } else {
                        thisGame.status.grade += (Math.random()-0.5)*4;
                        thisGame.status.relationship += (Math.random()-0.5)*4;
                        thisGame.status.health += (Math.random()-0.5)*4;
                    }
                    console.log(thisGame.status.health);
                    console.log(thisGame.status.relationship);
                    console.log(thisGame.status.grade);
                    _thisclass._selected_num = _thisclass._selected_num + 1;
                }

                if (_thisclass._selected_num == _thisclass._selected_num_available){
                    character_test_run();
                    _thisclass.hide_this();
                }
            }
            function answer_onButtonUp_5(){
                if (this.isOver){
                } else {
                }
            }
            function answer_onButtonOver_5(){
                this.isOver = true;
                if (this.isdown){
                    return;
                }
            }
            function answer_onButtonOut_5(){
                this.isOver = false;
                if (this.isdown){
                    return;
                }
            }
        }

    }
    show_this(){
        if (this._num_of_answers > 5) { app_simulator.stage.addChild(this._answer_buttons_5); }
        if (this._num_of_answers > 4) { app_simulator.stage.addChild(this._answer_buttons_4); }
        if (this._num_of_answers > 3) { app_simulator.stage.addChild(this._answer_buttons_3); }
        if (this._num_of_answers > 2) { app_simulator.stage.addChild(this._answer_buttons_2); app_simulator.stage.addChild(this._answer_text_2);}
        if (this._num_of_answers > 1) { app_simulator.stage.addChild(this._answer_buttons_1); app_simulator.stage.addChild(this._answer_text_1);}
        if (this._num_of_answers > 0) { app_simulator.stage.addChild(this._answer_buttons_0); app_simulator.stage.addChild(this._answer_text_0);}
        app_simulator.stage.addChild(this._question_center);
        app_simulator.stage.addChild(this._question_text);
    }
    hide_this(){
        app_simulator.stage.removeChild(this._question_center);
        if (this._num_of_answers > 5) { app_simulator.stage.removeChild(this._answer_buttons_5); }
        if (this._num_of_answers > 4) { app_simulator.stage.removeChild(this._answer_buttons_4); }
        if (this._num_of_answers > 3) { app_simulator.stage.removeChild(this._answer_buttons_3); }
        if (this._num_of_answers > 2) { app_simulator.stage.removeChild(this._answer_buttons_2); app_simulator.stage.removeChild(this._answer_text_2);}
        if (this._num_of_answers > 1) { app_simulator.stage.removeChild(this._answer_buttons_1); app_simulator.stage.removeChild(this._answer_text_1);}
        if (this._num_of_answers > 0) { app_simulator.stage.removeChild(this._answer_buttons_0); app_simulator.stage.removeChild(this._answer_text_0);}
        app_simulator.stage.removeChild(this._question_center);
        app_simulator.stage.removeChild(this._question_text);
    }
}
let Character_test_questions = [];
function enable_character_test(){
    for (let i = 0; i < Object.keys(question_List).length; i++){
        Character_test_questions.push(
            new Character_test(question_List[i][0], question_List[i][1], question_List[i][2], Character_test_questions)
        );

    }
    Character_test_questions[0].show_this();
}
function character_test_run(){
    console.log('a');
    for (let i = 1; i < Object.keys(question_List).length; i++){
        if((Character_test_questions[i-1]._selected_num ==
           Character_test_questions[i-1]._selected_num_available) &&
          (Character_test_questions[i]._selected_num !=
           Character_test_questions[i]._selected_num_available)){
            console.log('aaa');
            Character_test_questions[i].show_this();
        }
    }

    if (Character_test_questions[Object.keys(question_List).length - 1]._selected_num ==
       Character_test_questions[Object.keys(question_List).length - 1]._selected_num_available){
        // END TEST
        loading_test_to_department_choice()

    }
}


// DEPARTMENT CHOICE
class Department_choice {
    constructor(name,
                 department_button_x, department_button_y,
                 select_button_x, select_button_y,
                 list
                ){

        let _thisclass = this;
        this._name = name;
        this._object = icons_Texture[name];
        this._colorset = color_Template[name];
        this._department_button_x = department_button_x;
        this._department_button_y = department_button_y;
        this._select_button_x = select_button_x;
        this._select_button_y = select_button_y;
        this._return_button_x = select_button_x + 0.08;
        this._return_button_y = select_button_y;

        //////////////////////////////////////////////////////////
        this._department_button = new PIXI.Sprite(this._object);
        this._select_button = new PIXI.Graphics();
        this._return_button = new PIXI.Graphics();

        //////////////////////////////////////////////////////////
        this._department_button.scale.x *= 0.4;
        this._department_button.scale.y *= 0.4;
        this._department_button.buttonMode = true;
        this._department_button.anchor.set(0.5);
        this._department_button.x = app_simulator.renderer.width*this._department_button_x/2;
        this._department_button.y = app_simulator.renderer.height*this._department_button_y/2;
        this._department_button.interactive = true;


        this._select_button.beginFill(color_Template[name][1], 1);
        this._select_button.drawRect(app_simulator.renderer.width*this._select_button_x/2 - 170,
                                     app_simulator.renderer.height*this._select_button_y/2 - 40,
                                     140, 80);
        this._select_button.beginFill(color_Template[name][0], 1);
        this._select_button.drawRect(app_simulator.renderer.width*this._select_button_x/2 - 160,
                                     app_simulator.renderer.height*this._select_button_y/2 - 30,
                                     120, 60);
        this._select_button.buttonMode = true;
        this._select_button.interactive = false;
        this._select_button.alpha = 0;

        this._return_button.beginFill(color_Template[name][3], 1);
        this._return_button.drawRect(app_simulator.renderer.width*this._return_button_x/2 - 20,
                                     app_simulator.renderer.height*this._return_button_y/2 - 40,
                                     140, 80);
        this._return_button.beginFill(color_Template[name][2], 1);
        this._return_button.drawRect(app_simulator.renderer.width*this._return_button_x/2 - 10,
                                     app_simulator.renderer.height*this._return_button_y/2 - 30,
                                     120, 60);
        this._return_button.buttonMode = true;
        this._return_button.interactive = false;
        this._return_button.alpha = 0;

        ///////////////////////////////////////////////////////////
        this._department_button
            .on('pointerdown', department_onButtonDown)
            .on('pointerup', department_onButtonUp)
            .on('pointerupoutside', department_onButtonUp)
            .on('pointerover', department_onButtonOver)
            .on('pointerout', department_onButtonOut);

        function department_onButtonDown(){
            this.isdown = true;
            this.texture = icons_Texture[name+'_labeled'];
            thisGame.department = _thisclass._name;
            console.log(thisGame.department);
            _thisclass._select_button.interactive = true;
            _thisclass._select_button.alpha = 1;
            _thisclass._return_button.interactive = true;
            _thisclass._return_button.alpha = 1;
            for (let i = 0; i < list.length; i++){
                if (list[i]._name != thisGame.department){
                    console.log('hi');
                    list[i]._department_button.alpha = 0;
                    list[i]._department_button.interactive = false;
                }
            }
            console.log(thisGame.department + 'confirmed');
            for (let i = 0; i < list.length; i++){
                app_simulator.stage.removeChild(list[i]._department_button);
                app_simulator.stage.removeChild(list[i]._select_button);
                app_simulator.stage.removeChild(list[i]._return_button);
            }

            app_simulator.stage.removeChild(_thisclass._department_text);
            department_choice_to_select_timetable();
        }
        function department_onButtonUp(){
            if (this.isOver){
                this.texture = icons_Texture[name+'_labeled'];
            } else {
                this.texture = icons_Texture[name];
            }
        }
        function department_onButtonOver(){
            this.isOver = true;
            if (this.isdown){
                return;
            }
            this.texture = icons_Texture[name+'_labeled'];
        }
        function department_onButtonOut(){
            this.isOver = false;
            if (this.isdown){
                return;
            }
            this.texture = icons_Texture[name];
            console.log(thisGame.department);
        }

        ///////////////////////////////////////////////////////////
        this._select_button
            .on('pointerdown', select_onButtonDown)
            .on('pointerup', select_onButtonUp)
            .on('pointerupoutside', select_onButtonUp)
            .on('pointerover', select_onButtonOver)
            .on('pointerout', select_onButtonOut);


        function select_onButtonDown(){
            this.isdown = true;
            //this.texture = icons_Texture[name+'_labeled'];
            //thisGame.department = _thisclass._name;
            console.log(thisGame.department + 'confirmed');
            for (let i = 0; i < list.length; i++){
                app_simulator.stage.removeChild(list[i]._department_button);
                app_simulator.stage.removeChild(list[i]._select_button);
                app_simulator.stage.removeChild(list[i]._return_button);
            }

            app_simulator.stage.removeChild(_thisclass._department_text);
            department_choice_to_select_timetable();
        }
        function select_onButtonUp(){
            if (this.isOver){
                //this.texture = icons_Texture[name+'_labeled'];
            } else {
                //this.texture = icons_Texture[name];
            }
        }
        function select_onButtonOver(){
            this.isOver = true;
            if (this.isdown){
                return;
            }
            //this.texture = icons_Texture[name+'_labeled'];
        }
        function select_onButtonOut(){
            this.isOver = false;
            if (this.isdown){
                return;
            }
            //this.texture = icons_Texture[name];
            console.log(thisGame.department);
        }

        ///////////////////////////////////////////////////////////
        this._return_button
            .on('pointerdown', return_onButtonDown)
            .on('pointerup', return_onButtonUp)
            .on('pointerupoutside', return_onButtonUp)
            .on('pointerover', return_onButtonOver)
            .on('pointerout', return_onButtonOut);

        function return_onButtonDown(){
            this.isdown = true;
            //this.texture = icons_Texture[name+'_labeled'];
            //thisGame.department = _thisclass._name;
            console.log(thisGame.department + 'confirmed');
            for (let i = 0; i < list.length; i++){
                if (list[i]._name != thisGame.department){
                    list[i]._department_button.interactive = true;
                    list[i]._department_button.alpha = 1;
                }
            }
            _thisclass._select_button.interactive = false;
            _thisclass._select_button.alpha = 0;
            _thisclass._return_button.interactive = false;
            _thisclass._return_button.alpha = 0;

        }
        function return_onButtonUp(){
            if (this.isOver){
                //this.texture = icons_Texture[name+'_labeled'];
            } else {
                //this.texture = icons_Texture[name];
            }
        }
        function return_onButtonOver(){
            this.isOver = true;
            if (this.isdown){
                return;
            }
            //this.texture = icons_Texture[name+'_labeled'];
        }
        function return_onButtonOut(){
            this.isOver = false;
            if (this.isdown){
                return;
            }
            //this.texture = icons_Texture[name];
            console.log(thisGame.department);
        }
        app_simulator.stage.addChild(this._department_button);
        app_simulator.stage.addChild(this._select_button);
        app_simulator.stage.addChild(this._return_button);
    }
}

let Department_choice_button = [];
function enable_department_choice(){
    Department_choice_button.push(new Department_choice(Department[0], -0.66, -0.5, -0.3, 0.05, Department_choice_button));
    Department_choice_button.push(new Department_choice(Department[1], -0.22, -0.5, 0.14, 0.05, Department_choice_button));
    Department_choice_button.push(new Department_choice(Department[2], 0.22, -0.5, 0.58, 0.05, Department_choice_button));
    Department_choice_button.push(new Department_choice(Department[3], 0.66, -0.5, 0.24, 0.05, Department_choice_button));
    Department_choice_button.push(new Department_choice(Department[4], -0.66, 0.0, -0.3, 0.4, Department_choice_button));
    Department_choice_button.push(new Department_choice(Department[5], -0.22, 0.0, 0.14, 0.4, Department_choice_button));
    Department_choice_button.push(new Department_choice(Department[6], 0.22, 0.0, 0.58, 0.4, Department_choice_button));
    Department_choice_button.push(new Department_choice(Department[7], 0.66, 0.0, 0.24, 0.4, Department_choice_button));
    Department_choice_button.push(new Department_choice(Department[8], -0.66, 0.5, -0.3, 0.75, Department_choice_button));
    Department_choice_button.push(new Department_choice(Department[9], -0.22, 0.5, 0.14, 0.75, Department_choice_button));
    Department_choice_button.push(new Department_choice(Department[10], 0.22, 0.5, 0.58, 0.75, Department_choice_button));
    Department_choice_button.push(new Department_choice('RAND', 0.66, 0.5, 0.24, 0.75, Department_choice_button));
}


class select_timetable {
    constructor(department){
        let _thisclass = this;
        this._department = department;
        this._selected = 0;
        this._timetable = new Array(10);
        for (let i = 0; i < 10; i++){
            this._timetable[i] = new Array(5);
            for (let j = 0; j < 5; j++){
                this._timetable[i][j] = ""; // <<<< CHNAGE DATA STRUCTURE
            }
        }

        this._text_lecture_name = new PIXI.Text("", {
            fontFamily: 'Consolas',
            fontSize: 70,
            fill: 0x000000,
            stroke: 0x000000,
            strokeThickness: 1,
            dropShadow: true,
            dropShadowColor: '#DDDDDD',
            dropShadowBlur: 1,
            dropShadowAngle: Math.PI / 6,
            dropShadowDistance: 6,
            wordWrap: false
        });

        this._text_lecture_information = new PIXI.Text("", {
            fontFamily: 'Consolas',
            fontSize: 35,
            fill: 0x444444,
            stroke: 0x444444,
            strokeThickness: 1,
            dropShadow: false,
            wordWrap: true,
            wordWrapWidth: 880
        });


        this._text_lecture_name.x = 10;
        this._text_lecture_name.y = -80;


        this._text_lecture_information.x = 10;
        this._text_lecture_information.y = 20;

        app_simulator.stage.addChild(this._text_lecture_information);

        this._timetable_graphics = new Array(10);
        for (let i = 0; i < 10; i++){
            this._timetable_graphics[i] = new Array(5);
            for (let j = 0; j < 5; j++){
                this._timetable_graphics[i][j] = new PIXI.Graphics();
                this._timetable_graphics[i][j].beginFill(0xFFFFFF);
                this._timetable_graphics[i][j].drawRect(150*(j-5), i*72-260, 120, 50);
                this._timetable_graphics[i][j].buttonMode = true;
                this._timetable_graphics[i][j].interactive = true;
                this._timetable_graphics[i][j].my_name = _thisclass._timetable[i][j];
                console.log(_thisclass._timetable[i][j]);
                this._timetable_graphics[i][j]
                    .on('pointerdown', timetable_cell_onButtonDown)
                    .on('pointerup', timetable_cell_onButtonUp)
                    .on('pointeroutside', timetable_cell_onButtonUp)
                    .on('pointerover', timetable_cell_onButtonOver)
                    .on('pointerout', timetable_cell_onButtonOut)

                function timetable_cell_onButtonDown(){
                    //console.log('기모시~');
                }
                function timetable_cell_onButtonUp(){

                }
                function timetable_cell_onButtonOver(){
                    if (this.my_name != ""){
                        if (this.my_name[0] == "x"){
                            _thisclass._text_lecture_name.text = this.my_name.slice(1);
                            _thisclass._text_lecture_information.text = lecture_information[this.my_name.slice(1)];
                            console.log(this.my_name.slice(1));
                        } else {
                            _thisclass._text_lecture_name.text = this.my_name;
                            _thisclass._text_lecture_information.text = lecture_information[this.my_name];
                            console.log(this.my_name);
                            // console.log(lecture_information[this.my_name]);
                        }

                    }

                }
                function timetable_cell_onButtonOut(){
                    _thisclass._text_lecture_name.text = "";
                    _thisclass._text_lecture_information.text = "";
                }
            }
        }


        this._template_buttons = [];

        this._option_buttons = [];
        this._option_text = [];
        this._lecture_additional_name_control = [];

        this._template_buttons.push(new PIXI.Graphics());
        this._template_buttons.push(new PIXI.Graphics());
        this._template_buttons.push(new PIXI.Graphics());

        this._template_buttons[0].beginFill(color_Template[department][2]);
        this._template_buttons[1].beginFill(color_Template[department][2]);
        this._template_buttons[2].beginFill(color_Template[department][2]);

        this._template_text_1 = new PIXI.Text("기본시간표 1", {
            fontFamily: 'Consolas',
            fontSize: 50,
            fill: 0x000000,
            stroke: 0xFFFFFF,
            strokeThickness: 8,
            dropShadow: false,
            dropShadowColor: '#DDDDDD',
            dropShadowBlur: 1,
            dropShadowAngle: Math.PI / 6,
            dropShadowDistance: 6,
            wordWrap: false
        });
        this._template_text_1.anchor.set(0.5);
        this._template_text_1.x = 180;
        this._template_text_1.y = -270;

        this._template_text_2 = new PIXI.Text("기본시간표 2", {
            fontFamily: 'Consolas',
            fontSize: 50,
            fill: 0x000000,
            stroke: 0xFFFFFF,
            strokeThickness: 8,
            dropShadow: false,
            dropShadowColor: '#DDDDDD',
            dropShadowBlur: 1,
            dropShadowAngle: Math.PI / 6,
            dropShadowDistance: 6,
            wordWrap: false
        });
        this._template_text_2.anchor.set(0.5);
        this._template_text_2.x = 180;
        this._template_text_2.y = -120;

        this._template_text_3 = new PIXI.Text("기본시간표 3", {
            fontFamily: 'Consolas',
            fontSize: 50,
            fill: 0x000000,
            stroke: 0xFFFFFF,
            strokeThickness: 8,
            dropShadow: false,
            dropShadowColor: '#DDDDDD',
            dropShadowBlur: 1,
            dropShadowAngle: Math.PI / 6,
            dropShadowDistance: 6,
            wordWrap: false
        });
        this._template_text_3.anchor.set(0.5);
        this._template_text_3.x = 180;
        this._template_text_3.y = 30;

        this._template_buttons[0].drawRect(50, -270, 100, 100);
        this._template_buttons[1].drawRect(50, -120, 100, 100);
        this._template_buttons[2].drawRect(50, 30, 100, 100);

        for (let i = 0; i < 3; i++){
            this._template_buttons[i].buttonMode = true;
            this._template_buttons[i].interactive = true;
            this._template_buttons[i].alpha = 1;
            this._template_buttons[i].over = false;
            this._template_buttons[i]
                .on('pointerdown', template_onButtonDown)
                .on('pointerup', template_onButtonUp)
                .on('pointeroutside', template_onButtonUp)
                .on('pointerover', template_onButtonOver)
                .on('pointerout', template_onButtonOut)
        }

        function template_onButtonDown(){
            console.log(_thisclass._timetable);
            _thisclass.update_timetable_graphics();
            _thisclass._confirm_button.buttonMode = true;
            _thisclass._confirm_button.interactive = true;
            _thisclass._confirm_button.alpha = 0.6;
            for (let i = 0; i < 3; i++){
                _thisclass._template_buttons[i].buttonMode = false;
                _thisclass._template_buttons[i].interactive = false;
                app_simulator.stage.removeChild(_thisclass._template_buttons[i]);
                app_simulator.stage.removeChild(_thisclass._template_text_1);
                app_simulator.stage.removeChild(_thisclass._template_text_2);
                app_simulator.stage.removeChild(_thisclass._template_text_3);
            }

            for (let j = 0; j < 10; j++){
                for (let k = 0; k < 5; k++){
                    if (timetable_list[_thisclass._department+'_'+_thisclass._selected][j][k][0] == "x"){
                        _thisclass._temp = timetable_list[_thisclass._department+'_'+_thisclass._selected][j][k].slice(1);
                        if (_thisclass._lecture_additional_name_control.indexOf(_thisclass._temp) == -1){
                            _thisclass._lecture_additional_name_control.push(_thisclass._temp);
                            _thisclass._lecture_additional_name_control.push(0);

                            _thisclass._option_buttons.push(new PIXI.Graphics());
                            _thisclass._option_buttons[_thisclass._option_buttons.length - 1].beginFill(0xBBBBBB);
                            _thisclass._option_buttons[_thisclass._option_buttons.length - 1]
                                .drawRect((_thisclass._option_buttons.length - 1)*150+ 20, -260, 120, 120);
                            _thisclass._option_text.push(new PIXI.Text("선택 " + _thisclass._option_buttons.length, {
                                fontFamily: 'Consolas',
                                fontSize: 40,
                                fill: 0x000000,
                                stroke: 0xFFFFFF,
                                strokeThickness: 8,
                                dropShadow: false,
                                dropShadowColor: '#DDDDDD',
                                dropShadowBlur: 1,
                                dropShadowAngle: Math.PI / 6,
                                dropShadowDistance: 6,
                                wordWrap: false
                            }));
                            _thisclass._option_text[_thisclass._option_buttons.length - 1].anchor.set(0.5);
                            _thisclass._option_text[_thisclass._option_buttons.length - 1].x = (_thisclass._option_buttons.length - 1)*150+ 20;
                            _thisclass._option_text[_thisclass._option_buttons.length - 1].y = -260;
                            _thisclass._option_buttons[_thisclass._option_buttons.length - 1].buttonMode = true;
                            _thisclass._option_buttons[_thisclass._option_buttons.length - 1].interactive = true;
                            _thisclass._option_buttons[_thisclass._option_buttons.length - 1].alpha = 0.8;
                            _thisclass._option_buttons[_thisclass._option_buttons.length - 1]._selected = 0;
                            _thisclass._option_buttons[_thisclass._option_buttons.length - 1]._my_address = _thisclass._option_buttons.length -1;
                            _thisclass._option_buttons[_thisclass._option_buttons.length - 1]
                                .on('pointerdown', option_onButtonDown)
                                .on('pointerup', option_onButtonUp)
                                .on('pointeroutside', option_onButtonUp)
                                .on('pointerover', option_onButtonOver)
                                .on('pointerout', option_onButtonOut)

                            app_simulator.stage.addChild(_thisclass._option_buttons[_thisclass._option_buttons.length - 1]);
                            app_simulator.stage.addChild(_thisclass._option_text[_thisclass._option_buttons.length - 1]);
                        }
                    }
                }
            }
            function option_onButtonDown(){
                if (this._selected == 0){
                    this._selected = 1;

                    for (let j = 0; j < 10; j++){
                        for (let k = 0; k < 5; k++){

                        }
                    }
                } else {
                    this._selected = 0;
                }
            }
            function option_onButtonUp(){

            }
            function option_onButtonOver(){
                this.alpha = 1;
                for (let j = 0; j < 10; j++){
                    for (let k = 0; k < 5; k++){
                        if (timetable_list[_thisclass._department+'_'+_thisclass._selected][j][k] == "x" + _thisclass._lecture_additional_name_control[this._my_address*2]){
                            _thisclass._timetable[j][k] =  "x" + _thisclass._lecture_additional_name_control[this._my_address*2];
                            console.log(_thisclass._timetable[j][k]);
                            _thisclass._text_lecture_name.text = _thisclass._lecture_additional_name_control[this._my_address*2];
                            _thisclass._text_lecture_information.text = lecture_information[_thisclass._lecture_additional_name_control[this._my_address*2]];
                        }
                    }
                }
                _thisclass.update_timetable_graphics();
                console.log(_thisclass._lecture_additional_name_control[this._my_address*2]);

            }
            function option_onButtonOut(){
            for (let j = 0; j < 10; j++){
                for (let k = 0; k < 5; k++){
                    if (timetable_list[_thisclass._department+'_'+_thisclass._selected][j][k] == "x" + _thisclass._lecture_additional_name_control[this._my_address*2]){
                        if (this._selected == 0){
                            _thisclass._timetable[j][k] = "";
                            this.alpha = 0.6;
                        }
                    }
                }
            }
                _thisclass._text_lecture_name.text = "";
                _thisclass._text_lecture_information.text = "";
                _thisclass.update_timetable_graphics();

            }

            console.log('hi');
        }
        function template_onButtonUp(){
            console.log('hi');
            _thisclass.update_timetable_graphics();
        }
        function template_onButtonOver(){
            this.over = true;
            for (let i = 1; i < 4; i++){
                if (_thisclass._template_buttons[i-1].over == true){
                    for (let j = 0; j < 10; j++){
                        for (let k = 0; k < 5; k++){
                            if (timetable_list[_thisclass._department+'_'+i][j][k][0] != "x"){
                                _thisclass._timetable[j][k] = timetable_list[_thisclass._department+'_'+i][j][k] // <<<< CHNAGE DATA STRUCTURE
                            }
                        }
                    }
                    _thisclass._selected = i;
                }
            }
            _thisclass.update_timetable_graphics();
        }
        function template_onButtonOut(){
            this.over = false;
            if (_thisclass._template_buttons[0].over == false
                && _thisclass._template_buttons[1].over == false
                && _thisclass._template_buttons[2].over == false
               ) {
                for (let i = 0; i < 10; i++){
                    for (let j = 0; j < 5; j++){
                        _thisclass._timetable[i][j] = ""; // <<<< CHNAGE DATA STRUCTURE
                    }
                }
                _thisclass.update_timetable_graphics();
            }
        }

        for (let i = 0; i < _thisclass._option_buttons.length; i++){
            this._option_buttons[i].buttonMode = true;
            this._option_buttons[i].interactive = true;
            this._option_buttons[i].alpha = 1;
            this._option_buttons[i]
                .on('pointerdown', option_onButtonDown)
                .on('pointerup', option_onButtonUp)
                .on('pointeroutside', option_onButtonUp)
                .on('pointerover', option_onButtonOver)
                .on('pointerout', option_onButtonOut)
            app_simulator.stage.addChild(_thisclass._option_buttons[i]);
        }

        this._confirm_button = new PIXI.Graphics();
        this._confirm_text = new PIXI.Text("결정", {
            fontFamily: 'Consolas',
            fontSize: 50,
            fill: 0x000000,
            stroke: 0xFFFFFF,
            strokeThickness: 8,
            dropShadow: false,
            dropShadowColor: '#DDDDDD',
            dropShadowBlur: 1,
            dropShadowAngle: Math.PI / 6,
            dropShadowDistance: 6,
            wordWrap: false
        });
        //this._confirm_text.anchor.set(0.5);
        //this._confirm_e

        this._confirm_button.beginFill(0xBBBBBB);
        this._confirm_button.drawRect(500, 340, 200, 100);

        this._confirm_button.buttonMode = false;
        this._confirm_button.interactive = false;
        this._confirm_button.alpha = 0;


        this._confirm_button
            .on('pointerdown', confirm_onButtonDown)
            .on('pointerup', confirm_onButtonUp)
            .on('pointeroutside', confirm_onButtonUp)
            .on('pointerover', confirm_onButtonOver)
            .on('pointerout', confirm_onButtonOut)

        function confirm_onButtonDown(){
            for (let k = 0; k < 10; k++){
                for (let l = 0; l < 5; l++){
                    if (_thisclass._timetable[k][l][0] == "x"){
                        Timetable[k][l] = _thisclass._timetable[k][l].slice(1);
                    } else {
                        Timetable[k][l] = _thisclass._timetable[k][l];
                    }
                }
            }
            console.log(Timetable);
            for (let i = app_simulator.stage.children.length - 1; i>=0; i--){
                app_simulator.stage.removeChild(app_simulator.stage.children[i]);


                //
                //
                //
                //
                //
                //
                //
                //
                //
                //
                //
                //
                //

            }
            app_simulator.destroy(app_simulator.stage);
        }
        function confirm_onButtonUp(){

        }
        function confirm_onButtonOver(){
            this.alpha = 1;
        }
        function confirm_onButtonOut(){
            this.alpha = 0.6;
        }

        app_simulator.stage.addChild(this._confirm_button);
        app_simulator.stage.addChild(this._text_lecture_name);

    }
    show_timetable(){
        for (let i = 0; i < 10; i++){
            for (let j = 0; j < 5; j++){
                app_simulator.stage.addChild(this._timetable_graphics[i][j]);
            }
        }
    }
    show_templates(){
        for (let i = 0; i < 3; i++){
            app_simulator.stage.addChild(this._template_buttons[i]);
        }
        app_simulator.stage.addChild(this._template_text_1);
        app_simulator.stage.addChild(this._template_text_2);
        app_simulator.stage.addChild(this._template_text_3);
    }
    update_timetable_graphics(){
        this._lecture_name_control = [];
        this._option_lecture_name_control = [];
        for (let i = 0; i < 10; i++){
            for (let j = 0; j < 5; j++){
                this._timetable_graphics[i][j].clear();
                if (this._timetable[i][j] == ""){
                    this._timetable_graphics[i][j].beginFill(0xFFFFFF);
                } else {
                    if (this._lecture_name_control.indexOf(this._timetable[i][j]) == -1 && this._timetable[i][j][0] != "x"){
                        this._lecture_name_control.push(this._timetable[i][j]);
                    }
                    this._timetable_graphics[i][j].beginFill(
                        color_Template[this._department][this._lecture_name_control.indexOf(this._timetable[i][j])]);
                }
                if (this._timetable[i][j][0] != "x"){
                    this._timetable_graphics[i][j].drawRect(150*(j-5), i*72-260, 120, 50);
                }
            }
        }
        for (let i = 0; i < 10; i++){
            for (let j = 0; j < 5; j++){
                if (this._timetable[i][j][0] == "x"){
                    if (this._lecture_name_control.indexOf(this._timetable[i][j].slice(1)) == -1){
                        this._option_lecture_name_control.push(this._timetable[i][j].slice(1));
                    }
                    this._timetable_graphics[i][j].beginFill(
                        color_Template[this._department][this._lecture_additional_name_control.indexOf(this._timetable[i][j].slice(1))/2 + this._lecture_name_control.length]);
                }
                this._timetable_graphics[i][j].drawRect(150*(j-5), i*72-260, 120, 50);
                this._timetable_graphics[i][j].my_name = this._timetable[i][j];
            }
        }

    }

}

function loading_menu_to_test() {

    let loadingText = new PIXI.Text("성격테스트를 진행합니다.", {
        fontFamily: 'Consolas',
        fontSize: 50,
        fill: 0x000000,
        stroke: 0x000000,
        strokeThickness: 1,
        align: 'center',
        dropShadow: false,
        dropShadowColor: '#FFFFFF',
        dropShadowBlur: 1,
        dropShadowAngle: Math.PI / 6,
        dropShadowDistance: 6,
        wordWrap: false
    });

    let loadingText_Tip = new PIXI.Text( (document.getElementsByClassName('gameTip'))[Math.floor(Math.random()*10)].innerHTML, {
        fontFamily: 'Consolas',
        fontSize: 34,
        fill: 0x000000,
        stroke: 0x000000,
        strokeThickness: 1,
        align: 'center',
        dropShadow: false,
        dropShadowColor: '#FFFFFF',
        dropShadowBlur: 1,
        dropShadowAngle: Math.PI / 6,
        dropShadowDistance: 6,
        wordWrap: false
    });

    loadingText.anchor.set(0.5);
    loadingText.x = 0;
    loadingText.y = -50;

    loadingText_Tip.anchor.set(0.5);
    loadingText_Tip.x = 0;
    loadingText_Tip.y = 85;

    let loading_status = new PIXI.Graphics();
    app_simulator.stage.addChild(loading_status);

    let color_temp_0 = 0xB8C480;
    let color_temp_1 = 0xFF5964;

    let t = 0;

    Ticker_loading_menu_to_test = new PIXI.ticker.Ticker();
    Ticker_loading_menu_to_test.start();
    loading_status.beginFill(color_Template[Department[Math.floor(Math.random()*11)]][0], 1);

    Ticker_loading_menu_to_test.add(function(delta=1) {

        loading_status.clear();

        loading_status.beginFill(color_temp_1, 1);
        loading_status.drawRect(-960,520,t*1.8,22);
        loading_status.lineStyle(10, 0x000000, 0.3);
        loading_status.beginFill(color_temp_0, 0.6);
        loading_status.drawRect(-400,-240,800,480);

        t+=delta*3;
        app_simulator.stage.addChild(loadingText);
        app_simulator.stage.addChild(loadingText_Tip);

        if(t > 1800)
        {
            app_simulator.stage.removeChild(loadingText);
            app_simulator.stage.removeChild(loadingText_Tip);
            app_simulator.stage.removeChild(loading_status);
            Ticker_loading_menu_to_test.stop();
            enable_character_test();
        }
    });

}

function loading_test_to_department_choice() {

    let loadingText_2 = new PIXI.Text("학과를 선택해주세요.", {
        fontFamily: 'Consolas',
        fontSize: 50,
        fill: 0x000000,
        stroke: 0x000000,
        strokeThickness: 1,
        align: 'center',
        dropShadow: false,
        dropShadowColor: '#FFFFFF',
        dropShadowBlur: 1,
        dropShadowAngle: Math.PI / 6,
        dropShadowDistance: 6,
        wordWrap: false
    });

    let loadingText_Tip_2 = new PIXI.Text( (document.getElementsByClassName('gameTip'))[Math.floor(Math.random()*10)].innerHTML, {
        fontFamily: 'Consolas',
        fontSize: 34,
        fill: 0x000000,
        stroke: 0x000000,
        strokeThickness: 1,
        align: 'center',
        dropShadow: false,
        dropShadowColor: '#FFFFFF',
        dropShadowBlur: 1,
        dropShadowAngle: Math.PI / 6,
        dropShadowDistance: 6,
        wordWrap: false
    });
    
    loadingText_2.anchor.set(0.5);

    loadingText_2.x = 0;
    loadingText_2.y = -50;

    loadingText_Tip_2.anchor.set(0.5);
    loadingText_Tip_2.x = 0;
    loadingText_Tip_2.y = 85;

    let loading_status_2 = new PIXI.Graphics();
    app_simulator.stage.addChild(loading_status_2);

    let color_temp_0 = 0x79ADDC;
    let color_temp_1 = 0xB8C480;

    let t = 0;

    Ticker_loading_menu_to_test = new PIXI.ticker.Ticker();
    Ticker_loading_menu_to_test.start();
    loading_status_2.beginFill(color_Template[Department[Math.floor(Math.random()*11)]][0], 1);

    Ticker_loading_menu_to_test.add(function(delta=1) {

        loading_status_2.clear();

        loading_status_2.beginFill(color_temp_1, 1);
        loading_status_2.drawRect(-960,520,t*1.8,22);
        loading_status_2.lineStyle(10, 0x000000, 0.3);
        loading_status_2.beginFill(color_temp_0, 0.6);
        loading_status_2.drawRect(-400,-240,800,480);

        t+=delta*3;
        app_simulator.stage.addChild(loadingText_2);
        app_simulator.stage.addChild(loadingText_Tip_2);

        if(t > 1700)
        {
            app_simulator.stage.removeChild(loadingText_2);
            app_simulator.stage.removeChild(loadingText_Tip_2);
            app_simulator.stage.removeChild(loading_status_2);

            Ticker_loading_menu_to_test.stop();
            enable_department_choice();

        }
    });

}

function department_choice_to_select_timetable() {

    let loadingText_3 = new PIXI.Text("시간표를 선택해주세요.", {
        fontFamily: 'Consolas',
        fontSize: 50,
        fill: 0x000000,
        stroke: 0x000000,
        strokeThickness: 1,
        align: 'center',
        dropShadow: false,
        dropShadowColor: '#FFFFFF',
        dropShadowBlur: 1,
        dropShadowAngle: Math.PI / 6,
        dropShadowDistance: 6,
        wordWrap: false
    });

    let loadingText_Tip_3 = new PIXI.Text( (document.getElementsByClassName('gameTip'))[Math.floor(Math.random()*10)].innerHTML, {
        fontFamily: 'Consolas',
        fontSize: 34,
        fill: 0x000000,
        stroke: 0x000000,
        strokeThickness: 1,
        align: 'center',
        dropShadow: false,
        dropShadowColor: '#FFFFFF',
        dropShadowBlur: 1,
        dropShadowAngle: Math.PI / 6,
        dropShadowDistance: 6,
        wordWrap: false
    });

    loadingText_3.anchor.set(0.5);
    loadingText_3.x = 0;
    loadingText_3.y = -50;

    loadingText_Tip_3.anchor.set(0.5);
    loadingText_Tip_3.x = 0;
    loadingText_Tip_3.y = 85;

    let loading_status_3 = new PIXI.Graphics();
    app_simulator.stage.addChild(loading_status_3);

    let color_temp_0 = 0xFFFFFF;
    let color_temp_1 = 0x1F271B;

    let t = 0;

    Ticker_department_choice_to_select_timetable = new PIXI.ticker.Ticker();
    Ticker_department_choice_to_select_timetable.start();
    loading_status_3.beginFill(color_Template[Department[Math.floor(Math.random()*11)]][0], 1);

    Ticker_department_choice_to_select_timetable.add(function(delta=1) {

        loading_status_3.clear();

        loading_status_3.beginFill(color_temp_1, 1);
        loading_status_3.drawRect(-960,520,t*1.6,22);
        loading_status_3.lineStyle(10, 0x000000, 0.3);
        loading_status_3.beginFill(color_temp_0, 0.6);
        loading_status_3.drawRect(-400,-240,800,480);

        t+=delta*3;
        app_simulator.stage.addChild(loadingText_3);
        app_simulator.stage.addChild(loadingText_Tip_3);

        if(t > 1600)
        {
            app_simulator.stage.removeChild(loadingText_3);
            app_simulator.stage.removeChild(loadingText_Tip_3);
            app_simulator.stage.removeChild(loading_status_3);

            Ticker_department_choice_to_select_timetable.stop();
            if (thisGame.department == 'RAND'){
                thisGame.department = Department[Math.floor(Math.random(11))];
            }
            let select_table = new select_timetable(thisGame.department);
            select_table.show_timetable();
            select_table.show_templates();

            thisGame.timeTable = new Array(7);
            for( var i=0; i<7; i++ ) {
              thisGame.timeTable[i] = new Array(11);
            }
            // select_table._timetable 10 * 5
            for (let i = 0; i < 7; i++){
              if (i === 5 || i === 6){
                for (let j = 0; j < 11; j++){
                    thisGame.timeTable[i][j] = undefined;
                  }
                }
              else {
                for (let j = 0; j < 11; j++){
                  if(j === 10)
                    thisGame.timeTable[i][j] = undefined;
                  else {
                    thisGame.timeTable[i][j] = Event[select_table._timetable[j][i]];
                  }
                }
              }
            }
            for (let i = 0; i < 7; i++)
              for (let j = 0; j < 11 ; j++)
                console.log(thisGame.timeTable[i][j]);
            process();
        }
    });
}
